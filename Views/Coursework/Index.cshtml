@model IEnumerable<StudentTrackingSystem3.Models.Coursework>

@{
    ViewBag.Title = "Coursework";
}

<h2>Graduate Student Coursework</h2>
<br />
<h4>Coursework for <strong>@ViewBag.CurrentStudent_FirstName @ViewBag.CurrentStudent_LastName</strong></h4>
@*<h5>Attending <em><em>from</em> <u>@Convert.ToString(string.Format("{0:MMMM yyyy}", @ViewBag.CurrentStudent_DegreeStart))</u> <em>to</em> <u>@Convert.ToString(string.Format("{0:MMMM yyyy}", @ViewBag.CurrentStudent_DegreeEnd))</u> </em></h5>*@
<br />

<div class="row menuNav" id="menuNav_coursework">
    @Html.ActionLink("Background", "Edit", "Student", new { id = ViewBag.CurrentStudent_Id }, new { @class = "btn btn-primary infoNav menuNav_background col-md-2 col-xs-12" })

    @Html.ActionLink("Coursework", "Index", "Coursework", new { id = ViewBag.CurrentStudent_Id }, new { @class = "btn btn-primary infoNav menuNav_coursework col-md-2 col-xs-12" })

    @Html.ActionLink("Performance & Activity", "Index", "Performance", new { id = ViewBag.CurrentStudent_Id }, new { @class = "btn btn-primary infoNav menuNav_performance col-md-2 col-xs-12" })

    @Html.ActionLink("Requirements", "Index", "Graduation", new { id = ViewBag.CurrentStudent_Id }, new { @class = "btn btn-primary infoNav menuNav_graduation col-md-2 col-xs-12" })

    @Html.ActionLink("Post-Graduation", "Index", "PostGraduation", new { id = ViewBag.CurrentStudent_Id }, new { @class = "btn btn-primary infoNav menuNav_postgrad col-md-2 col-xs-12" })
</div>

<hr />
<br />

<p>
    @Html.ActionLink("Add Course", "Create", new { id = ViewBag.CurrentStudent_Id }, htmlAttributes: new {@class="guestHidden" })
</p>

@if (!object.ReferenceEquals(Model.FirstOrDefault(), null))
{

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Semester", "Index", new { sortOrder = ViewBag.Semester_SortParm })
            </th>
            <th>
                @Html.ActionLink("Course", "Index", new { sortOrder = ViewBag.Course_SortParm })
            </th>
            <th>
                @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.Title_SortParm })
            </th>
            <th>
                @Html.ActionLink("Grade", "Index", new { sortOrder = ViewBag.Grade_SortParm })
            </th>
            <th></th>
            <th></th>
        </tr>



        @{var i = 1; }
        @foreach (var group in Model.GroupBy(item => item.Semesters.Name + " " + item.Year))
        {


            <tr class="tableRowHeader">
                <td><strong>Semester @i &mdash; @group.Key</strong></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>


            var numOfCourses = 0;
            var numOfCredits = 0;
            var gpa = 0.00;
            var semGpa = 0.00;
            foreach (var item in group)
            {
                <tr>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.Semesters.Name) @Html.DisplayFor(modelItem => item.Year)*@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Course.CourseNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Course.CourseName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Grade.Name)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-xs navbuttons guestHidden", @style = "background-color: #060; color: #FFF" })
                    </td>
                    <td>
                        <a title="Delete" href="@Url.Action("Delete", "Coursework", new {id = item.ID})" class="btn-btn-warning guestHidden biostatHidden adminHidden" onclick="return confirm('Are you sure you want to delete this entry?');">
                            <span class="glyphicon glyphicon-trash"></span>
                        </a>
                    </td>
                </tr>
                numOfCourses++;
                gpa = gpa + (double)item.Grade.GradePoint;
                numOfCredits = numOfCredits + item.Course.Credits;
            }
            semGpa = (gpa / numOfCourses);
            string displaySemGpa = semGpa.ToString("0.00");

            <tr>
                <td></td>
                <td></td>
                <td><em class="pull-right">Semester GPA:</em></td>
                <td><strong>@displaySemGpa</strong></td>
                <td colspan="2"></td>
            </tr>
            <tr>
                <td></td>
                <td></td>
                <td><em class="pull-right">Total Number of Credits:</em></td>
                <td><strong>@numOfCredits</strong></td>
                <td></td>
                <td></td>
            </tr>

            i++;
        }

    </table>

            }
            else
            {
    <p style="font-style: italic; margin-left: 20pt;">No courses entered for @ViewBag.CurrentStudent_FirstName @ViewBag.CurrentStudent_LastName.  <span class="guestHidden">Please add a course.</span></p>
}



@Html.Raw(TempData["msg"])

@*<br />
    <p>@Html.ActionLink("Back to List of Students", "Index", "Student")</p>*@