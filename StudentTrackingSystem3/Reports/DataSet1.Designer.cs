//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace StudentTrackingSystem3.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private BackgroundDataTable tableBackground;
        
        private CourseworkDataTable tableCoursework;
        
        private PerformanceDataTable tablePerformance;
        
        private RequirementsDataTable tableRequirements;
        
        private PostgraduationDataTable tablePostgraduation;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Background"] != null)) {
                    base.Tables.Add(new BackgroundDataTable(ds.Tables["Background"]));
                }
                if ((ds.Tables["Coursework"] != null)) {
                    base.Tables.Add(new CourseworkDataTable(ds.Tables["Coursework"]));
                }
                if ((ds.Tables["Performance"] != null)) {
                    base.Tables.Add(new PerformanceDataTable(ds.Tables["Performance"]));
                }
                if ((ds.Tables["Requirements"] != null)) {
                    base.Tables.Add(new RequirementsDataTable(ds.Tables["Requirements"]));
                }
                if ((ds.Tables["Postgraduation"] != null)) {
                    base.Tables.Add(new PostgraduationDataTable(ds.Tables["Postgraduation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BackgroundDataTable Background {
            get {
                return this.tableBackground;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CourseworkDataTable Coursework {
            get {
                return this.tableCoursework;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PerformanceDataTable Performance {
            get {
                return this.tablePerformance;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RequirementsDataTable Requirements {
            get {
                return this.tableRequirements;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PostgraduationDataTable Postgraduation {
            get {
                return this.tablePostgraduation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Background"] != null)) {
                    base.Tables.Add(new BackgroundDataTable(ds.Tables["Background"]));
                }
                if ((ds.Tables["Coursework"] != null)) {
                    base.Tables.Add(new CourseworkDataTable(ds.Tables["Coursework"]));
                }
                if ((ds.Tables["Performance"] != null)) {
                    base.Tables.Add(new PerformanceDataTable(ds.Tables["Performance"]));
                }
                if ((ds.Tables["Requirements"] != null)) {
                    base.Tables.Add(new RequirementsDataTable(ds.Tables["Requirements"]));
                }
                if ((ds.Tables["Postgraduation"] != null)) {
                    base.Tables.Add(new PostgraduationDataTable(ds.Tables["Postgraduation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableBackground = ((BackgroundDataTable)(base.Tables["Background"]));
            if ((initTable == true)) {
                if ((this.tableBackground != null)) {
                    this.tableBackground.InitVars();
                }
            }
            this.tableCoursework = ((CourseworkDataTable)(base.Tables["Coursework"]));
            if ((initTable == true)) {
                if ((this.tableCoursework != null)) {
                    this.tableCoursework.InitVars();
                }
            }
            this.tablePerformance = ((PerformanceDataTable)(base.Tables["Performance"]));
            if ((initTable == true)) {
                if ((this.tablePerformance != null)) {
                    this.tablePerformance.InitVars();
                }
            }
            this.tableRequirements = ((RequirementsDataTable)(base.Tables["Requirements"]));
            if ((initTable == true)) {
                if ((this.tableRequirements != null)) {
                    this.tableRequirements.InitVars();
                }
            }
            this.tablePostgraduation = ((PostgraduationDataTable)(base.Tables["Postgraduation"]));
            if ((initTable == true)) {
                if ((this.tablePostgraduation != null)) {
                    this.tablePostgraduation.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBackground = new BackgroundDataTable();
            base.Tables.Add(this.tableBackground);
            this.tableCoursework = new CourseworkDataTable();
            base.Tables.Add(this.tableCoursework);
            this.tablePerformance = new PerformanceDataTable();
            base.Tables.Add(this.tablePerformance);
            this.tableRequirements = new RequirementsDataTable();
            base.Tables.Add(this.tableRequirements);
            this.tablePostgraduation = new PostgraduationDataTable();
            base.Tables.Add(this.tablePostgraduation);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBackground() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCoursework() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePerformance() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeRequirements() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePostgraduation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BackgroundRowChangeEventHandler(object sender, BackgroundRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CourseworkRowChangeEventHandler(object sender, CourseworkRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PerformanceRowChangeEventHandler(object sender, PerformanceRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void RequirementsRowChangeEventHandler(object sender, RequirementsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PostgraduationRowChangeEventHandler(object sender, PostgraduationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BackgroundDataTable : global::System.Data.TypedTableBase<BackgroundRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnMiddleName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnSchoolEmail;
            
            private global::System.Data.DataColumn columnOtherEmail;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnDegreeAtAdmission;
            
            private global::System.Data.DataColumn columnRaceEthnicity;
            
            private global::System.Data.DataColumn columnRaceOther;
            
            private global::System.Data.DataColumn columnDegreeProgram;
            
            private global::System.Data.DataColumn columnTrack;
            
            private global::System.Data.DataColumn columnPlan;
            
            private global::System.Data.DataColumn columnDegreeStartSemester;
            
            private global::System.Data.DataColumn columnDegreeStartYear;
            
            private global::System.Data.DataColumn columnDegreeAwardedSemester;
            
            private global::System.Data.DataColumn columnDegreeAwardedYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BackgroundDataTable() {
                this.TableName = "Background";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BackgroundDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BackgroundDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MiddleNameColumn {
                get {
                    return this.columnMiddleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SchoolEmailColumn {
                get {
                    return this.columnSchoolEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OtherEmailColumn {
                get {
                    return this.columnOtherEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DegreeAtAdmissionColumn {
                get {
                    return this.columnDegreeAtAdmission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RaceEthnicityColumn {
                get {
                    return this.columnRaceEthnicity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RaceOtherColumn {
                get {
                    return this.columnRaceOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DegreeProgramColumn {
                get {
                    return this.columnDegreeProgram;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TrackColumn {
                get {
                    return this.columnTrack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PlanColumn {
                get {
                    return this.columnPlan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DegreeStartSemesterColumn {
                get {
                    return this.columnDegreeStartSemester;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DegreeStartYearColumn {
                get {
                    return this.columnDegreeStartYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DegreeAwardedSemesterColumn {
                get {
                    return this.columnDegreeAwardedSemester;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DegreeAwardedYearColumn {
                get {
                    return this.columnDegreeAwardedYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BackgroundRow this[int index] {
                get {
                    return ((BackgroundRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BackgroundRowChangeEventHandler BackgroundRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BackgroundRowChangeEventHandler BackgroundRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BackgroundRowChangeEventHandler BackgroundRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BackgroundRowChangeEventHandler BackgroundRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBackgroundRow(BackgroundRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BackgroundRow AddBackgroundRow(
                        int StudentID, 
                        string FirstName, 
                        string MiddleName, 
                        string LastName, 
                        string SchoolEmail, 
                        string OtherEmail, 
                        string Phone, 
                        string Gender, 
                        string DegreeAtAdmission, 
                        string RaceEthnicity, 
                        string RaceOther, 
                        string DegreeProgram, 
                        string Track, 
                        string Plan, 
                        string DegreeStartSemester, 
                        int DegreeStartYear, 
                        string DegreeAwardedSemester, 
                        int DegreeAwardedYear) {
                BackgroundRow rowBackgroundRow = ((BackgroundRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        StudentID,
                        FirstName,
                        MiddleName,
                        LastName,
                        SchoolEmail,
                        OtherEmail,
                        Phone,
                        Gender,
                        DegreeAtAdmission,
                        RaceEthnicity,
                        RaceOther,
                        DegreeProgram,
                        Track,
                        Plan,
                        DegreeStartSemester,
                        DegreeStartYear,
                        DegreeAwardedSemester,
                        DegreeAwardedYear};
                rowBackgroundRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBackgroundRow);
                return rowBackgroundRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BackgroundRow FindById(int Id) {
                return ((BackgroundRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BackgroundDataTable cln = ((BackgroundDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BackgroundDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnStudentID = base.Columns["StudentID"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMiddleName = base.Columns["MiddleName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnSchoolEmail = base.Columns["SchoolEmail"];
                this.columnOtherEmail = base.Columns["OtherEmail"];
                this.columnPhone = base.Columns["Phone"];
                this.columnGender = base.Columns["Gender"];
                this.columnDegreeAtAdmission = base.Columns["DegreeAtAdmission"];
                this.columnRaceEthnicity = base.Columns["RaceEthnicity"];
                this.columnRaceOther = base.Columns["RaceOther"];
                this.columnDegreeProgram = base.Columns["DegreeProgram"];
                this.columnTrack = base.Columns["Track"];
                this.columnPlan = base.Columns["Plan"];
                this.columnDegreeStartSemester = base.Columns["DegreeStartSemester"];
                this.columnDegreeStartYear = base.Columns["DegreeStartYear"];
                this.columnDegreeAwardedSemester = base.Columns["DegreeAwardedSemester"];
                this.columnDegreeAwardedYear = base.Columns["DegreeAwardedYear"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleName = new global::System.Data.DataColumn("MiddleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddleName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnSchoolEmail = new global::System.Data.DataColumn("SchoolEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolEmail);
                this.columnOtherEmail = new global::System.Data.DataColumn("OtherEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherEmail);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnDegreeAtAdmission = new global::System.Data.DataColumn("DegreeAtAdmission", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeAtAdmission);
                this.columnRaceEthnicity = new global::System.Data.DataColumn("RaceEthnicity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRaceEthnicity);
                this.columnRaceOther = new global::System.Data.DataColumn("RaceOther", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRaceOther);
                this.columnDegreeProgram = new global::System.Data.DataColumn("DegreeProgram", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeProgram);
                this.columnTrack = new global::System.Data.DataColumn("Track", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrack);
                this.columnPlan = new global::System.Data.DataColumn("Plan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlan);
                this.columnDegreeStartSemester = new global::System.Data.DataColumn("DegreeStartSemester", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeStartSemester);
                this.columnDegreeStartYear = new global::System.Data.DataColumn("DegreeStartYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeStartYear);
                this.columnDegreeAwardedSemester = new global::System.Data.DataColumn("DegreeAwardedSemester", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeAwardedSemester);
                this.columnDegreeAwardedYear = new global::System.Data.DataColumn("DegreeAwardedYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeAwardedYear);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnStudentID.AllowDBNull = false;
                this.columnFirstName.AllowDBNull = false;
                this.columnFirstName.MaxLength = 2147483647;
                this.columnMiddleName.MaxLength = 2147483647;
                this.columnLastName.AllowDBNull = false;
                this.columnLastName.MaxLength = 2147483647;
                this.columnSchoolEmail.AllowDBNull = false;
                this.columnSchoolEmail.MaxLength = 2147483647;
                this.columnOtherEmail.AllowDBNull = false;
                this.columnOtherEmail.MaxLength = 2147483647;
                this.columnPhone.AllowDBNull = false;
                this.columnPhone.MaxLength = 2147483647;
                this.columnGender.MaxLength = 2147483647;
                this.columnDegreeAtAdmission.ReadOnly = true;
                this.columnDegreeAtAdmission.MaxLength = 2147483647;
                this.columnRaceEthnicity.ReadOnly = true;
                this.columnRaceEthnicity.MaxLength = 2147483647;
                this.columnRaceOther.MaxLength = 2147483647;
                this.columnDegreeProgram.MaxLength = 2147483647;
                this.columnTrack.MaxLength = 2147483647;
                this.columnPlan.MaxLength = 2147483647;
                this.columnDegreeStartSemester.MaxLength = 2147483647;
                this.columnDegreeStartYear.AllowDBNull = false;
                this.columnDegreeAwardedSemester.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BackgroundRow NewBackgroundRow() {
                return ((BackgroundRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BackgroundRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BackgroundRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BackgroundRowChanged != null)) {
                    this.BackgroundRowChanged(this, new BackgroundRowChangeEvent(((BackgroundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BackgroundRowChanging != null)) {
                    this.BackgroundRowChanging(this, new BackgroundRowChangeEvent(((BackgroundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BackgroundRowDeleted != null)) {
                    this.BackgroundRowDeleted(this, new BackgroundRowChangeEvent(((BackgroundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BackgroundRowDeleting != null)) {
                    this.BackgroundRowDeleting(this, new BackgroundRowChangeEvent(((BackgroundRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBackgroundRow(BackgroundRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BackgroundDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CourseworkDataTable : global::System.Data.TypedTableBase<CourseworkRow> {
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnSemester;
            
            private global::System.Data.DataColumn columnCourse;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnGrade;
            
            private global::System.Data.DataColumn columnCredits;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CourseworkDataTable() {
                this.TableName = "Coursework";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CourseworkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CourseworkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SemesterColumn {
                get {
                    return this.columnSemester;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CourseColumn {
                get {
                    return this.columnCourse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GradeColumn {
                get {
                    return this.columnGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CreditsColumn {
                get {
                    return this.columnCredits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CourseworkRow this[int index] {
                get {
                    return ((CourseworkRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CourseworkRowChangeEventHandler CourseworkRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CourseworkRowChangeEventHandler CourseworkRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CourseworkRowChangeEventHandler CourseworkRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CourseworkRowChangeEventHandler CourseworkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCourseworkRow(CourseworkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CourseworkRow AddCourseworkRow(int StudentID, string Name, string Semester, string Course, string Title, string Grade, string Credits) {
                CourseworkRow rowCourseworkRow = ((CourseworkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StudentID,
                        Name,
                        Semester,
                        Course,
                        Title,
                        Grade,
                        Credits};
                rowCourseworkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCourseworkRow);
                return rowCourseworkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CourseworkDataTable cln = ((CourseworkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CourseworkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnStudentID = base.Columns["StudentID"];
                this.columnName = base.Columns["Name"];
                this.columnSemester = base.Columns["Semester"];
                this.columnCourse = base.Columns["Course"];
                this.columnTitle = base.Columns["Title"];
                this.columnGrade = base.Columns["Grade"];
                this.columnCredits = base.Columns["Credits"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSemester = new global::System.Data.DataColumn("Semester", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSemester);
                this.columnCourse = new global::System.Data.DataColumn("Course", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourse);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnGrade = new global::System.Data.DataColumn("Grade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrade);
                this.columnCredits = new global::System.Data.DataColumn("Credits", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredits);
                this.columnStudentID.ReadOnly = true;
                this.columnName.ReadOnly = true;
                this.columnName.MaxLength = 2147483647;
                this.columnSemester.ReadOnly = true;
                this.columnSemester.MaxLength = 2147483647;
                this.columnCourse.ReadOnly = true;
                this.columnCourse.MaxLength = 2147483647;
                this.columnTitle.ReadOnly = true;
                this.columnTitle.MaxLength = 2147483647;
                this.columnGrade.ReadOnly = true;
                this.columnGrade.MaxLength = 2147483647;
                this.columnCredits.ReadOnly = true;
                this.columnCredits.MaxLength = 13;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CourseworkRow NewCourseworkRow() {
                return ((CourseworkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CourseworkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CourseworkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CourseworkRowChanged != null)) {
                    this.CourseworkRowChanged(this, new CourseworkRowChangeEvent(((CourseworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CourseworkRowChanging != null)) {
                    this.CourseworkRowChanging(this, new CourseworkRowChangeEvent(((CourseworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CourseworkRowDeleted != null)) {
                    this.CourseworkRowDeleted(this, new CourseworkRowChangeEvent(((CourseworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CourseworkRowDeleting != null)) {
                    this.CourseworkRowDeleting(this, new CourseworkRowChangeEvent(((CourseworkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCourseworkRow(CourseworkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CourseworkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PerformanceDataTable : global::System.Data.TypedTableBase<PerformanceRow> {
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnInformation;
            
            private global::System.Data.DataColumn columnStatusType;
            
            private global::System.Data.DataColumn columnStatusDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PerformanceDataTable() {
                this.TableName = "Performance";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PerformanceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PerformanceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InformationColumn {
                get {
                    return this.columnInformation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StatusTypeColumn {
                get {
                    return this.columnStatusType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StatusDescriptionColumn {
                get {
                    return this.columnStatusDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PerformanceRow this[int index] {
                get {
                    return ((PerformanceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PerformanceRowChangeEventHandler PerformanceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PerformanceRowChangeEventHandler PerformanceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PerformanceRowChangeEventHandler PerformanceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PerformanceRowChangeEventHandler PerformanceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPerformanceRow(PerformanceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PerformanceRow AddPerformanceRow(int StudentID, string Name, string Category, string Information, string StatusType, string StatusDescription) {
                PerformanceRow rowPerformanceRow = ((PerformanceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StudentID,
                        Name,
                        Category,
                        Information,
                        StatusType,
                        StatusDescription};
                rowPerformanceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPerformanceRow);
                return rowPerformanceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PerformanceDataTable cln = ((PerformanceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PerformanceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnStudentID = base.Columns["StudentID"];
                this.columnName = base.Columns["Name"];
                this.columnCategory = base.Columns["Category"];
                this.columnInformation = base.Columns["Information"];
                this.columnStatusType = base.Columns["StatusType"];
                this.columnStatusDescription = base.Columns["StatusDescription"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnInformation = new global::System.Data.DataColumn("Information", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInformation);
                this.columnStatusType = new global::System.Data.DataColumn("StatusType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusType);
                this.columnStatusDescription = new global::System.Data.DataColumn("StatusDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusDescription);
                this.columnStudentID.ReadOnly = true;
                this.columnName.ReadOnly = true;
                this.columnName.MaxLength = 2147483647;
                this.columnCategory.ReadOnly = true;
                this.columnCategory.MaxLength = 2147483647;
                this.columnInformation.ReadOnly = true;
                this.columnInformation.MaxLength = 2147483647;
                this.columnStatusType.ReadOnly = true;
                this.columnStatusType.MaxLength = 16;
                this.columnStatusDescription.ReadOnly = true;
                this.columnStatusDescription.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PerformanceRow NewPerformanceRow() {
                return ((PerformanceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PerformanceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PerformanceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PerformanceRowChanged != null)) {
                    this.PerformanceRowChanged(this, new PerformanceRowChangeEvent(((PerformanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PerformanceRowChanging != null)) {
                    this.PerformanceRowChanging(this, new PerformanceRowChangeEvent(((PerformanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PerformanceRowDeleted != null)) {
                    this.PerformanceRowDeleted(this, new PerformanceRowChangeEvent(((PerformanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PerformanceRowDeleting != null)) {
                    this.PerformanceRowDeleting(this, new PerformanceRowChangeEvent(((PerformanceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePerformanceRow(PerformanceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PerformanceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RequirementsDataTable : global::System.Data.TypedTableBase<RequirementsRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAdvisor;
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnQualifiyingExamination;
            
            private global::System.Data.DataColumn columnResearchTopic;
            
            private global::System.Data.DataColumn columnProposalPresentation;
            
            private global::System.Data.DataColumn columnComprehensiveExam;
            
            private global::System.Data.DataColumn columnCommitteeMembers;
            
            private global::System.Data.DataColumn columnFinalDefenseTitle;
            
            private global::System.Data.DataColumn columnFinalDefenseResult;
            
            private global::System.Data.DataColumn columnManuscriptFile;
            
            private global::System.Data.DataColumn columnDegreeAwarded;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RequirementsDataTable() {
                this.TableName = "Requirements";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal RequirementsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected RequirementsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AdvisorColumn {
                get {
                    return this.columnAdvisor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QualifiyingExaminationColumn {
                get {
                    return this.columnQualifiyingExamination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ResearchTopicColumn {
                get {
                    return this.columnResearchTopic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ProposalPresentationColumn {
                get {
                    return this.columnProposalPresentation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ComprehensiveExamColumn {
                get {
                    return this.columnComprehensiveExam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommitteeMembersColumn {
                get {
                    return this.columnCommitteeMembers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FinalDefenseTitleColumn {
                get {
                    return this.columnFinalDefenseTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FinalDefenseResultColumn {
                get {
                    return this.columnFinalDefenseResult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ManuscriptFileColumn {
                get {
                    return this.columnManuscriptFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DegreeAwardedColumn {
                get {
                    return this.columnDegreeAwarded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RequirementsRow this[int index] {
                get {
                    return ((RequirementsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event RequirementsRowChangeEventHandler RequirementsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event RequirementsRowChangeEventHandler RequirementsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event RequirementsRowChangeEventHandler RequirementsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event RequirementsRowChangeEventHandler RequirementsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddRequirementsRow(RequirementsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RequirementsRow AddRequirementsRow(string Name, string Advisor, int StudentID, string QualifiyingExamination, string ResearchTopic, string ProposalPresentation, string ComprehensiveExam, string CommitteeMembers, string FinalDefenseTitle, string FinalDefenseResult, string ManuscriptFile, string DegreeAwarded) {
                RequirementsRow rowRequirementsRow = ((RequirementsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        Advisor,
                        StudentID,
                        QualifiyingExamination,
                        ResearchTopic,
                        ProposalPresentation,
                        ComprehensiveExam,
                        CommitteeMembers,
                        FinalDefenseTitle,
                        FinalDefenseResult,
                        ManuscriptFile,
                        DegreeAwarded};
                rowRequirementsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRequirementsRow);
                return rowRequirementsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RequirementsDataTable cln = ((RequirementsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RequirementsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnAdvisor = base.Columns["Advisor"];
                this.columnStudentID = base.Columns["StudentID"];
                this.columnQualifiyingExamination = base.Columns["QualifiyingExamination"];
                this.columnResearchTopic = base.Columns["ResearchTopic"];
                this.columnProposalPresentation = base.Columns["ProposalPresentation"];
                this.columnComprehensiveExam = base.Columns["ComprehensiveExam"];
                this.columnCommitteeMembers = base.Columns["CommitteeMembers"];
                this.columnFinalDefenseTitle = base.Columns["FinalDefenseTitle"];
                this.columnFinalDefenseResult = base.Columns["FinalDefenseResult"];
                this.columnManuscriptFile = base.Columns["ManuscriptFile"];
                this.columnDegreeAwarded = base.Columns["DegreeAwarded"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAdvisor = new global::System.Data.DataColumn("Advisor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvisor);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnQualifiyingExamination = new global::System.Data.DataColumn("QualifiyingExamination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualifiyingExamination);
                this.columnResearchTopic = new global::System.Data.DataColumn("ResearchTopic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResearchTopic);
                this.columnProposalPresentation = new global::System.Data.DataColumn("ProposalPresentation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProposalPresentation);
                this.columnComprehensiveExam = new global::System.Data.DataColumn("ComprehensiveExam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComprehensiveExam);
                this.columnCommitteeMembers = new global::System.Data.DataColumn("CommitteeMembers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommitteeMembers);
                this.columnFinalDefenseTitle = new global::System.Data.DataColumn("FinalDefenseTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalDefenseTitle);
                this.columnFinalDefenseResult = new global::System.Data.DataColumn("FinalDefenseResult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalDefenseResult);
                this.columnManuscriptFile = new global::System.Data.DataColumn("ManuscriptFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManuscriptFile);
                this.columnDegreeAwarded = new global::System.Data.DataColumn("DegreeAwarded", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDegreeAwarded);
                this.columnName.ReadOnly = true;
                this.columnName.MaxLength = 2147483647;
                this.columnAdvisor.ReadOnly = true;
                this.columnAdvisor.MaxLength = 2147483647;
                this.columnQualifiyingExamination.ReadOnly = true;
                this.columnQualifiyingExamination.MaxLength = 2147483647;
                this.columnResearchTopic.MaxLength = 2147483647;
                this.columnProposalPresentation.ReadOnly = true;
                this.columnProposalPresentation.MaxLength = 2147483647;
                this.columnComprehensiveExam.ReadOnly = true;
                this.columnComprehensiveExam.MaxLength = 2147483647;
                this.columnCommitteeMembers.ReadOnly = true;
                this.columnCommitteeMembers.MaxLength = 2147483647;
                this.columnFinalDefenseTitle.MaxLength = 2147483647;
                this.columnFinalDefenseResult.ReadOnly = true;
                this.columnFinalDefenseResult.MaxLength = 2147483647;
                this.columnManuscriptFile.ReadOnly = true;
                this.columnManuscriptFile.MaxLength = 2147483647;
                this.columnDegreeAwarded.ReadOnly = true;
                this.columnDegreeAwarded.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RequirementsRow NewRequirementsRow() {
                return ((RequirementsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RequirementsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RequirementsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RequirementsRowChanged != null)) {
                    this.RequirementsRowChanged(this, new RequirementsRowChangeEvent(((RequirementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RequirementsRowChanging != null)) {
                    this.RequirementsRowChanging(this, new RequirementsRowChangeEvent(((RequirementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RequirementsRowDeleted != null)) {
                    this.RequirementsRowDeleted(this, new RequirementsRowChangeEvent(((RequirementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RequirementsRowDeleting != null)) {
                    this.RequirementsRowDeleting(this, new RequirementsRowChangeEvent(((RequirementsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveRequirementsRow(RequirementsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RequirementsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PostgraduationDataTable : global::System.Data.TypedTableBase<PostgraduationRow> {
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnCVs;
            
            private global::System.Data.DataColumn columnEmploymentHistory;
            
            private global::System.Data.DataColumn columnPublicationsPeerReviewedJournalonlyPublished;
            
            private global::System.Data.DataColumn columnTotalNumberofPublications;
            
            private global::System.Data.DataColumn columnGrants;
            
            private global::System.Data.DataColumn columnTotalNumberofGrants;
            
            private global::System.Data.DataColumn columnHonorsAwards;
            
            private global::System.Data.DataColumn columnTotalNumberofHonorsAwards;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PostgraduationDataTable() {
                this.TableName = "Postgraduation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PostgraduationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PostgraduationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CVsColumn {
                get {
                    return this.columnCVs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EmploymentHistoryColumn {
                get {
                    return this.columnEmploymentHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PublicationsPeerReviewedJournalonlyPublishedColumn {
                get {
                    return this.columnPublicationsPeerReviewedJournalonlyPublished;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalNumberofPublicationsColumn {
                get {
                    return this.columnTotalNumberofPublications;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GrantsColumn {
                get {
                    return this.columnGrants;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalNumberofGrantsColumn {
                get {
                    return this.columnTotalNumberofGrants;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HonorsAwardsColumn {
                get {
                    return this.columnHonorsAwards;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TotalNumberofHonorsAwardsColumn {
                get {
                    return this.columnTotalNumberofHonorsAwards;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PostgraduationRow this[int index] {
                get {
                    return ((PostgraduationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PostgraduationRowChangeEventHandler PostgraduationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PostgraduationRowChangeEventHandler PostgraduationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PostgraduationRowChangeEventHandler PostgraduationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PostgraduationRowChangeEventHandler PostgraduationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPostgraduationRow(PostgraduationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PostgraduationRow AddPostgraduationRow(int StudentID, string Name, string Email, string Phone, string CVs, string EmploymentHistory, string PublicationsPeerReviewedJournalonlyPublished, string TotalNumberofPublications, string Grants, string TotalNumberofGrants, string HonorsAwards, string TotalNumberofHonorsAwards) {
                PostgraduationRow rowPostgraduationRow = ((PostgraduationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StudentID,
                        Name,
                        Email,
                        Phone,
                        CVs,
                        EmploymentHistory,
                        PublicationsPeerReviewedJournalonlyPublished,
                        TotalNumberofPublications,
                        Grants,
                        TotalNumberofGrants,
                        HonorsAwards,
                        TotalNumberofHonorsAwards};
                rowPostgraduationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPostgraduationRow);
                return rowPostgraduationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PostgraduationDataTable cln = ((PostgraduationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PostgraduationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnStudentID = base.Columns["StudentID"];
                this.columnName = base.Columns["Name"];
                this.columnEmail = base.Columns["Email"];
                this.columnPhone = base.Columns["Phone"];
                this.columnCVs = base.Columns["CVs"];
                this.columnEmploymentHistory = base.Columns["EmploymentHistory"];
                this.columnPublicationsPeerReviewedJournalonlyPublished = base.Columns["PublicationsPeerReviewedJournalonlyPublished"];
                this.columnTotalNumberofPublications = base.Columns["TotalNumberofPublications"];
                this.columnGrants = base.Columns["Grants"];
                this.columnTotalNumberofGrants = base.Columns["TotalNumberofGrants"];
                this.columnHonorsAwards = base.Columns["HonorsAwards"];
                this.columnTotalNumberofHonorsAwards = base.Columns["TotalNumberofHonorsAwards"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnCVs = new global::System.Data.DataColumn("CVs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCVs);
                this.columnEmploymentHistory = new global::System.Data.DataColumn("EmploymentHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmploymentHistory);
                this.columnPublicationsPeerReviewedJournalonlyPublished = new global::System.Data.DataColumn("PublicationsPeerReviewedJournalonlyPublished", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublicationsPeerReviewedJournalonlyPublished);
                this.columnTotalNumberofPublications = new global::System.Data.DataColumn("TotalNumberofPublications", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNumberofPublications);
                this.columnGrants = new global::System.Data.DataColumn("Grants", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrants);
                this.columnTotalNumberofGrants = new global::System.Data.DataColumn("TotalNumberofGrants", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNumberofGrants);
                this.columnHonorsAwards = new global::System.Data.DataColumn("HonorsAwards", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHonorsAwards);
                this.columnTotalNumberofHonorsAwards = new global::System.Data.DataColumn("TotalNumberofHonorsAwards", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNumberofHonorsAwards);
                this.columnName.ReadOnly = true;
                this.columnName.MaxLength = 2147483647;
                this.columnEmail.MaxLength = 2147483647;
                this.columnPhone.MaxLength = 2147483647;
                this.columnCVs.ReadOnly = true;
                this.columnCVs.MaxLength = 2147483647;
                this.columnEmploymentHistory.ReadOnly = true;
                this.columnEmploymentHistory.MaxLength = 2147483647;
                this.columnPublicationsPeerReviewedJournalonlyPublished.ReadOnly = true;
                this.columnPublicationsPeerReviewedJournalonlyPublished.MaxLength = 2147483647;
                this.columnTotalNumberofPublications.ReadOnly = true;
                this.columnTotalNumberofPublications.MaxLength = 376;
                this.columnGrants.ReadOnly = true;
                this.columnGrants.MaxLength = 2147483647;
                this.columnTotalNumberofGrants.ReadOnly = true;
                this.columnTotalNumberofGrants.MaxLength = 133;
                this.columnHonorsAwards.ReadOnly = true;
                this.columnHonorsAwards.MaxLength = 2147483647;
                this.columnTotalNumberofHonorsAwards.ReadOnly = true;
                this.columnTotalNumberofHonorsAwards.MaxLength = 133;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PostgraduationRow NewPostgraduationRow() {
                return ((PostgraduationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PostgraduationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PostgraduationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PostgraduationRowChanged != null)) {
                    this.PostgraduationRowChanged(this, new PostgraduationRowChangeEvent(((PostgraduationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PostgraduationRowChanging != null)) {
                    this.PostgraduationRowChanging(this, new PostgraduationRowChangeEvent(((PostgraduationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PostgraduationRowDeleted != null)) {
                    this.PostgraduationRowDeleted(this, new PostgraduationRowChangeEvent(((PostgraduationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PostgraduationRowDeleting != null)) {
                    this.PostgraduationRowDeleting(this, new PostgraduationRowChangeEvent(((PostgraduationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePostgraduationRow(PostgraduationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PostgraduationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BackgroundRow : global::System.Data.DataRow {
            
            private BackgroundDataTable tableBackground;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BackgroundRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBackground = ((BackgroundDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableBackground.IdColumn]));
                }
                set {
                    this[this.tableBackground.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tableBackground.StudentIDColumn]));
                }
                set {
                    this[this.tableBackground.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FirstName {
                get {
                    return ((string)(this[this.tableBackground.FirstNameColumn]));
                }
                set {
                    this[this.tableBackground.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MiddleName {
                get {
                    try {
                        return ((string)(this[this.tableBackground.MiddleNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiddleName\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.MiddleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LastName {
                get {
                    return ((string)(this[this.tableBackground.LastNameColumn]));
                }
                set {
                    this[this.tableBackground.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SchoolEmail {
                get {
                    return ((string)(this[this.tableBackground.SchoolEmailColumn]));
                }
                set {
                    this[this.tableBackground.SchoolEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OtherEmail {
                get {
                    return ((string)(this[this.tableBackground.OtherEmailColumn]));
                }
                set {
                    this[this.tableBackground.OtherEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Phone {
                get {
                    return ((string)(this[this.tableBackground.PhoneColumn]));
                }
                set {
                    this[this.tableBackground.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableBackground.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DegreeAtAdmission {
                get {
                    try {
                        return ((string)(this[this.tableBackground.DegreeAtAdmissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeAtAdmission\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.DegreeAtAdmissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RaceEthnicity {
                get {
                    try {
                        return ((string)(this[this.tableBackground.RaceEthnicityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RaceEthnicity\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.RaceEthnicityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RaceOther {
                get {
                    try {
                        return ((string)(this[this.tableBackground.RaceOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RaceOther\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.RaceOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DegreeProgram {
                get {
                    try {
                        return ((string)(this[this.tableBackground.DegreeProgramColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeProgram\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.DegreeProgramColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Track {
                get {
                    try {
                        return ((string)(this[this.tableBackground.TrackColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Track\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.TrackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Plan {
                get {
                    try {
                        return ((string)(this[this.tableBackground.PlanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Plan\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.PlanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DegreeStartSemester {
                get {
                    try {
                        return ((string)(this[this.tableBackground.DegreeStartSemesterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeStartSemester\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.DegreeStartSemesterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DegreeStartYear {
                get {
                    return ((int)(this[this.tableBackground.DegreeStartYearColumn]));
                }
                set {
                    this[this.tableBackground.DegreeStartYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DegreeAwardedSemester {
                get {
                    try {
                        return ((string)(this[this.tableBackground.DegreeAwardedSemesterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeAwardedSemester\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.DegreeAwardedSemesterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int DegreeAwardedYear {
                get {
                    try {
                        return ((int)(this[this.tableBackground.DegreeAwardedYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeAwardedYear\' in table \'Background\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBackground.DegreeAwardedYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMiddleNameNull() {
                return this.IsNull(this.tableBackground.MiddleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMiddleNameNull() {
                this[this.tableBackground.MiddleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tableBackground.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGenderNull() {
                this[this.tableBackground.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDegreeAtAdmissionNull() {
                return this.IsNull(this.tableBackground.DegreeAtAdmissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDegreeAtAdmissionNull() {
                this[this.tableBackground.DegreeAtAdmissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRaceEthnicityNull() {
                return this.IsNull(this.tableBackground.RaceEthnicityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRaceEthnicityNull() {
                this[this.tableBackground.RaceEthnicityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRaceOtherNull() {
                return this.IsNull(this.tableBackground.RaceOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRaceOtherNull() {
                this[this.tableBackground.RaceOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDegreeProgramNull() {
                return this.IsNull(this.tableBackground.DegreeProgramColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDegreeProgramNull() {
                this[this.tableBackground.DegreeProgramColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTrackNull() {
                return this.IsNull(this.tableBackground.TrackColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTrackNull() {
                this[this.tableBackground.TrackColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPlanNull() {
                return this.IsNull(this.tableBackground.PlanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPlanNull() {
                this[this.tableBackground.PlanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDegreeStartSemesterNull() {
                return this.IsNull(this.tableBackground.DegreeStartSemesterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDegreeStartSemesterNull() {
                this[this.tableBackground.DegreeStartSemesterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDegreeAwardedSemesterNull() {
                return this.IsNull(this.tableBackground.DegreeAwardedSemesterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDegreeAwardedSemesterNull() {
                this[this.tableBackground.DegreeAwardedSemesterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDegreeAwardedYearNull() {
                return this.IsNull(this.tableBackground.DegreeAwardedYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDegreeAwardedYearNull() {
                this[this.tableBackground.DegreeAwardedYearColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CourseworkRow : global::System.Data.DataRow {
            
            private CourseworkDataTable tableCoursework;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CourseworkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCoursework = ((CourseworkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    try {
                        return ((int)(this[this.tableCoursework.StudentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentID\' in table \'Coursework\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoursework.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableCoursework.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Coursework\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoursework.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Semester {
                get {
                    try {
                        return ((string)(this[this.tableCoursework.SemesterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Semester\' in table \'Coursework\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoursework.SemesterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Course {
                get {
                    try {
                        return ((string)(this[this.tableCoursework.CourseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Course\' in table \'Coursework\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoursework.CourseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableCoursework.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'Coursework\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoursework.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Grade {
                get {
                    try {
                        return ((string)(this[this.tableCoursework.GradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grade\' in table \'Coursework\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoursework.GradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Credits {
                get {
                    try {
                        return ((string)(this[this.tableCoursework.CreditsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credits\' in table \'Coursework\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCoursework.CreditsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStudentIDNull() {
                return this.IsNull(this.tableCoursework.StudentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStudentIDNull() {
                this[this.tableCoursework.StudentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableCoursework.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNameNull() {
                this[this.tableCoursework.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSemesterNull() {
                return this.IsNull(this.tableCoursework.SemesterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSemesterNull() {
                this[this.tableCoursework.SemesterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCourseNull() {
                return this.IsNull(this.tableCoursework.CourseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCourseNull() {
                this[this.tableCoursework.CourseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTitleNull() {
                return this.IsNull(this.tableCoursework.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTitleNull() {
                this[this.tableCoursework.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGradeNull() {
                return this.IsNull(this.tableCoursework.GradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGradeNull() {
                this[this.tableCoursework.GradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCreditsNull() {
                return this.IsNull(this.tableCoursework.CreditsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCreditsNull() {
                this[this.tableCoursework.CreditsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PerformanceRow : global::System.Data.DataRow {
            
            private PerformanceDataTable tablePerformance;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PerformanceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePerformance = ((PerformanceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    try {
                        return ((int)(this[this.tablePerformance.StudentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentID\' in table \'Performance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformance.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tablePerformance.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Performance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformance.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tablePerformance.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'Performance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformance.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Information {
                get {
                    try {
                        return ((string)(this[this.tablePerformance.InformationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Information\' in table \'Performance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformance.InformationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StatusType {
                get {
                    try {
                        return ((string)(this[this.tablePerformance.StatusTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusType\' in table \'Performance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformance.StatusTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StatusDescription {
                get {
                    try {
                        return ((string)(this[this.tablePerformance.StatusDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusDescription\' in table \'Performance\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePerformance.StatusDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStudentIDNull() {
                return this.IsNull(this.tablePerformance.StudentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStudentIDNull() {
                this[this.tablePerformance.StudentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tablePerformance.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNameNull() {
                this[this.tablePerformance.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCategoryNull() {
                return this.IsNull(this.tablePerformance.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCategoryNull() {
                this[this.tablePerformance.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInformationNull() {
                return this.IsNull(this.tablePerformance.InformationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInformationNull() {
                this[this.tablePerformance.InformationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStatusTypeNull() {
                return this.IsNull(this.tablePerformance.StatusTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStatusTypeNull() {
                this[this.tablePerformance.StatusTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStatusDescriptionNull() {
                return this.IsNull(this.tablePerformance.StatusDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStatusDescriptionNull() {
                this[this.tablePerformance.StatusDescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RequirementsRow : global::System.Data.DataRow {
            
            private RequirementsDataTable tableRequirements;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal RequirementsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRequirements = ((RequirementsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Advisor {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.AdvisorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Advisor\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.AdvisorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    try {
                        return ((int)(this[this.tableRequirements.StudentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentID\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string QualifiyingExamination {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.QualifiyingExaminationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QualifiyingExamination\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.QualifiyingExaminationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ResearchTopic {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.ResearchTopicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResearchTopic\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.ResearchTopicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ProposalPresentation {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.ProposalPresentationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProposalPresentation\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.ProposalPresentationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ComprehensiveExam {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.ComprehensiveExamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComprehensiveExam\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.ComprehensiveExamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CommitteeMembers {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.CommitteeMembersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommitteeMembers\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.CommitteeMembersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FinalDefenseTitle {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.FinalDefenseTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalDefenseTitle\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.FinalDefenseTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FinalDefenseResult {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.FinalDefenseResultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalDefenseResult\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.FinalDefenseResultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ManuscriptFile {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.ManuscriptFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManuscriptFile\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.ManuscriptFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DegreeAwarded {
                get {
                    try {
                        return ((string)(this[this.tableRequirements.DegreeAwardedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DegreeAwarded\' in table \'Requirements\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRequirements.DegreeAwardedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableRequirements.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNameNull() {
                this[this.tableRequirements.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAdvisorNull() {
                return this.IsNull(this.tableRequirements.AdvisorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAdvisorNull() {
                this[this.tableRequirements.AdvisorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStudentIDNull() {
                return this.IsNull(this.tableRequirements.StudentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStudentIDNull() {
                this[this.tableRequirements.StudentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsQualifiyingExaminationNull() {
                return this.IsNull(this.tableRequirements.QualifiyingExaminationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetQualifiyingExaminationNull() {
                this[this.tableRequirements.QualifiyingExaminationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsResearchTopicNull() {
                return this.IsNull(this.tableRequirements.ResearchTopicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetResearchTopicNull() {
                this[this.tableRequirements.ResearchTopicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsProposalPresentationNull() {
                return this.IsNull(this.tableRequirements.ProposalPresentationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetProposalPresentationNull() {
                this[this.tableRequirements.ProposalPresentationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsComprehensiveExamNull() {
                return this.IsNull(this.tableRequirements.ComprehensiveExamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetComprehensiveExamNull() {
                this[this.tableRequirements.ComprehensiveExamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommitteeMembersNull() {
                return this.IsNull(this.tableRequirements.CommitteeMembersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommitteeMembersNull() {
                this[this.tableRequirements.CommitteeMembersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFinalDefenseTitleNull() {
                return this.IsNull(this.tableRequirements.FinalDefenseTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFinalDefenseTitleNull() {
                this[this.tableRequirements.FinalDefenseTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFinalDefenseResultNull() {
                return this.IsNull(this.tableRequirements.FinalDefenseResultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFinalDefenseResultNull() {
                this[this.tableRequirements.FinalDefenseResultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsManuscriptFileNull() {
                return this.IsNull(this.tableRequirements.ManuscriptFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetManuscriptFileNull() {
                this[this.tableRequirements.ManuscriptFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDegreeAwardedNull() {
                return this.IsNull(this.tableRequirements.DegreeAwardedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDegreeAwardedNull() {
                this[this.tableRequirements.DegreeAwardedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PostgraduationRow : global::System.Data.DataRow {
            
            private PostgraduationDataTable tablePostgraduation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PostgraduationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePostgraduation = ((PostgraduationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int StudentID {
                get {
                    try {
                        return ((int)(this[this.tablePostgraduation.StudentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentID\' in table \'Postgraduation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePostgraduation.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Name {
                get {
                    if (this.IsNameNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.NameColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Email {
                get {
                    if (this.IsEmailNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.EmailColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Phone {
                get {
                    if (this.IsPhoneNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.PhoneColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CVs {
                get {
                    if (this.IsCVsNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.CVsColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.CVsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EmploymentHistory {
                get {
                    if (this.IsEmploymentHistoryNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.EmploymentHistoryColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.EmploymentHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PublicationsPeerReviewedJournalonlyPublished {
                get {
                    if (this.IsPublicationsPeerReviewedJournalonlyPublishedNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.PublicationsPeerReviewedJournalonlyPublishedColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.PublicationsPeerReviewedJournalonlyPublishedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TotalNumberofPublications {
                get {
                    if (this.IsTotalNumberofPublicationsNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.TotalNumberofPublicationsColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.TotalNumberofPublicationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Grants {
                get {
                    if (this.IsGrantsNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.GrantsColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.GrantsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TotalNumberofGrants {
                get {
                    if (this.IsTotalNumberofGrantsNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.TotalNumberofGrantsColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.TotalNumberofGrantsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HonorsAwards {
                get {
                    if (this.IsHonorsAwardsNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.HonorsAwardsColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.HonorsAwardsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TotalNumberofHonorsAwards {
                get {
                    if (this.IsTotalNumberofHonorsAwardsNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tablePostgraduation.TotalNumberofHonorsAwardsColumn]));
                    }
                }
                set {
                    this[this.tablePostgraduation.TotalNumberofHonorsAwardsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStudentIDNull() {
                return this.IsNull(this.tablePostgraduation.StudentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStudentIDNull() {
                this[this.tablePostgraduation.StudentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tablePostgraduation.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNameNull() {
                this[this.tablePostgraduation.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEmailNull() {
                return this.IsNull(this.tablePostgraduation.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEmailNull() {
                this[this.tablePostgraduation.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPhoneNull() {
                return this.IsNull(this.tablePostgraduation.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPhoneNull() {
                this[this.tablePostgraduation.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCVsNull() {
                return this.IsNull(this.tablePostgraduation.CVsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCVsNull() {
                this[this.tablePostgraduation.CVsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEmploymentHistoryNull() {
                return this.IsNull(this.tablePostgraduation.EmploymentHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEmploymentHistoryNull() {
                this[this.tablePostgraduation.EmploymentHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPublicationsPeerReviewedJournalonlyPublishedNull() {
                return this.IsNull(this.tablePostgraduation.PublicationsPeerReviewedJournalonlyPublishedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPublicationsPeerReviewedJournalonlyPublishedNull() {
                this[this.tablePostgraduation.PublicationsPeerReviewedJournalonlyPublishedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalNumberofPublicationsNull() {
                return this.IsNull(this.tablePostgraduation.TotalNumberofPublicationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalNumberofPublicationsNull() {
                this[this.tablePostgraduation.TotalNumberofPublicationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGrantsNull() {
                return this.IsNull(this.tablePostgraduation.GrantsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGrantsNull() {
                this[this.tablePostgraduation.GrantsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalNumberofGrantsNull() {
                return this.IsNull(this.tablePostgraduation.TotalNumberofGrantsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalNumberofGrantsNull() {
                this[this.tablePostgraduation.TotalNumberofGrantsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHonorsAwardsNull() {
                return this.IsNull(this.tablePostgraduation.HonorsAwardsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHonorsAwardsNull() {
                this[this.tablePostgraduation.HonorsAwardsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTotalNumberofHonorsAwardsNull() {
                return this.IsNull(this.tablePostgraduation.TotalNumberofHonorsAwardsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTotalNumberofHonorsAwardsNull() {
                this[this.tablePostgraduation.TotalNumberofHonorsAwardsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BackgroundRowChangeEvent : global::System.EventArgs {
            
            private BackgroundRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BackgroundRowChangeEvent(BackgroundRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BackgroundRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CourseworkRowChangeEvent : global::System.EventArgs {
            
            private CourseworkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CourseworkRowChangeEvent(CourseworkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CourseworkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PerformanceRowChangeEvent : global::System.EventArgs {
            
            private PerformanceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PerformanceRowChangeEvent(PerformanceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PerformanceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class RequirementsRowChangeEvent : global::System.EventArgs {
            
            private RequirementsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RequirementsRowChangeEvent(RequirementsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RequirementsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PostgraduationRowChangeEvent : global::System.EventArgs {
            
            private PostgraduationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PostgraduationRowChangeEvent(PostgraduationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PostgraduationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace StudentTrackingSystem3.Reports.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BackgroundTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BackgroundTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Background";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("MiddleName", "MiddleName");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("SchoolEmail", "SchoolEmail");
            tableMapping.ColumnMappings.Add("OtherEmail", "OtherEmail");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("DegreeAtAdmission", "DegreeAtAdmission");
            tableMapping.ColumnMappings.Add("RaceEthnicity", "RaceEthnicity");
            tableMapping.ColumnMappings.Add("RaceOther", "RaceOther");
            tableMapping.ColumnMappings.Add("DegreeProgram", "DegreeProgram");
            tableMapping.ColumnMappings.Add("Track", "Track");
            tableMapping.ColumnMappings.Add("Plan", "Plan");
            tableMapping.ColumnMappings.Add("DegreeStartSemester", "DegreeStartSemester");
            tableMapping.ColumnMappings.Add("DegreeStartYear", "DegreeStartYear");
            tableMapping.ColumnMappings.Add("DegreeAwardedSemester", "DegreeAwardedSemester");
            tableMapping.ColumnMappings.Add("DegreeAwardedYear", "DegreeAwardedYear");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SchoolContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DISTINCT s.Id, s.StudentNumber AS StudentID, s.FirstName, s.MiddleName, s." +
                "LastName, s.SchoolEmail, s.OtherEmail, s.Phone, gender.Name AS Gender, REPLACE(R" +
                "EPLACE(REPLACE(\'<\' + STUFF\r\n                      ((SELECT CASE WHEN pv2.DegreeT" +
                "ypesID IS NULL THEN \'N/A\' WHEN pv2.DegreeTypesID = \'\' THEN \'N/A\' ELSE \'; -\' + de" +
                "gTypes.Name + \' in \' + pv2.Title + \' (\' + pv2.SchoolName + \', \' + CAST(YEAR(pv2." +
                "DateOfAward) AS nvarchar(4)) \r\n                                          + \')\' E" +
                "ND AS Expr1\r\n                        FROM      PrevDegree AS pv2 INNER JOIN\r\n   " +
                "                                       Student AS s2 ON s.Id = s2.Id AND s2.Id =" +
                " pv2.StudentID LEFT OUTER JOIN\r\n                                          Common" +
                "Fields AS degTypes ON degTypes.ID = pv2.DegreeTypesID FOR XML PATH(\'\')), 1, 1, \'" +
                "\'), \'<Expr1>\', \'\'), \'</Expr1>\', \'\'), \';\', \'\') AS DegreeAtAdmission, REPLACE(REPL" +
                "ACE(REPLACE(\'<\' + STUFF\r\n                      ((SELECT CASE WHEN r2.Name IS NUL" +
                "L THEN \'N/A\' WHEN r2.Name = \'\' THEN \'N/A\' ELSE \'; -\' + r2.Name END AS Expr1\r\n   " +
                "                     FROM      Races AS r2 INNER JOIN\r\n                         " +
                "                 PersonRaces AS pr2 ON pr2.RaceID = r2.Id INNER JOIN\r\n          " +
                "                                Student AS s2 ON s.Id = s2.Id AND s2.Id = pr2.St" +
                "udentID FOR XML PATH(\'\')), 1, 1, \'\'), \'<Expr1>\', \'\'), \'</Expr1>\', \'\'), \';\', \'\') " +
                "AS RaceEthnicity, s.RaceOther, degreeProgram.Name AS DegreeProgram, track.Name A" +
                "S Track, \r\n                  plans.Name AS [Plan], degreeStartSem.Name AS Degree" +
                "StartSemester, s.DegreeStartYear, gradSem.Name AS DegreeAwardedSemester, grad.De" +
                "greeEndYear AS DegreeAwardedYear\r\nFROM     Student AS s LEFT OUTER JOIN\r\n       " +
                "           PrevDegree AS pd ON pd.StudentID = s.Id INNER JOIN\r\n                 " +
                " CommonFields AS gender ON gender.ID = s.GendersId INNER JOIN\r\n                 " +
                " CommonFields AS degreeProgram ON degreeProgram.ID = s.DegreeProgramsId INNER JO" +
                "IN\r\n                  CommonFields AS track ON track.ID = s.TracksId INNER JOIN\r" +
                "\n                  CommonFields AS plans ON plans.ID = s.PlansId INNER JOIN\r\n   " +
                "               CommonFields AS degreeStartSem ON degreeStartSem.ID = s.DegreeSta" +
                "rtSemsId LEFT OUTER JOIN\r\n                  Graduation AS grad ON grad.StudentID" +
                " = s.Id LEFT OUTER JOIN\r\n                  CommonFields AS gradSem ON gradSem.ID" +
                " = grad.DegreeEndSemsId\r\nWHERE  ((DATEFROMPARTS(s.DegreeStartYear, 01, 01) < @Fr" +
                "omDate AND NOT (DATEFROMPARTS(grad.DegreeEndYear, 1, 1) < @FromDate) OR\r\n       " +
                "           DATEFROMPARTS(s.DegreeStartYear, 01, 01) < @FromDate AND grad.DegreeE" +
                "ndYear IS NULL OR\r\n                  DATEFROMPARTS(s.DegreeStartYear, 01, 01) >=" +
                " @FromDate AND DATEFROMPARTS(s.DegreeStartYear, 01, 01) <= @ToDate) AND NOT (DAT" +
                "EFROMPARTS(s.DegreeStartYear, 01, 01) > @ToDate) OR\r\n                  ISNULL(@F" +
                "romDate, \'\') = \'\' OR\r\n                  ISNULL(@ToDate, \'\') = \'\') AND (s.FirstNa" +
                "me + \' \' + s.LastName = @Student OR\r\n                  ISNULL(@Student, \'\') = \'\'" +
                ") AND ((CASE WHEN (gradSem.Name IS NULL AND grad.DegreeEndYear IS NULL) THEN \'Cu" +
                "rrent\' ELSE \'Former\' END) = @CurrentFormer OR\r\n                  ISNULL(@Current" +
                "Former, \'\') = \'\')\r\nORDER BY s.DegreeStartYear DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Student", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentFormer", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.BackgroundDataTable dataTable, string FromDate, string ToDate, string Student, string CurrentFormer) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate == null)) {
                throw new global::System.ArgumentNullException("FromDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FromDate));
            }
            if ((ToDate == null)) {
                throw new global::System.ArgumentNullException("ToDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ToDate));
            }
            if ((Student == null)) {
                throw new global::System.ArgumentNullException("Student");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Student));
            }
            if ((CurrentFormer == null)) {
                throw new global::System.ArgumentNullException("CurrentFormer");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(CurrentFormer));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.BackgroundDataTable GetData(string FromDate, string ToDate, string Student, string CurrentFormer) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate == null)) {
                throw new global::System.ArgumentNullException("FromDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FromDate));
            }
            if ((ToDate == null)) {
                throw new global::System.ArgumentNullException("ToDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ToDate));
            }
            if ((Student == null)) {
                throw new global::System.ArgumentNullException("Student");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Student));
            }
            if ((CurrentFormer == null)) {
                throw new global::System.ArgumentNullException("CurrentFormer");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(CurrentFormer));
            }
            DataSet1.BackgroundDataTable dataTable = new DataSet1.BackgroundDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CourseworkTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CourseworkTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Coursework";
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Semester", "Semester");
            tableMapping.ColumnMappings.Add("Course", "Course");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("Grade", "Grade");
            tableMapping.ColumnMappings.Add("Credits", "Credits");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SchoolContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT StudentID, Name, Semester, Course, Title, Grade, Credits\r\nFROM     (SELECT" +
                " s.StudentNumber AS StudentID, s.FirstName + \' \' + s.LastName AS Name, sem.Name " +
                "+ \' \' + CONVERT(nvarchar(4), cw.Year) AS Semester, NULL AS Course, NULL AS Title" +
                ", NULL AS Grade, NULL AS Credits\r\n                  FROM      Student AS s RIGHT" +
                " OUTER JOIN\r\n                                    Coursework AS cw ON cw.StudentI" +
                "D = s.Id LEFT OUTER JOIN\r\n                                    CommonFields AS se" +
                "m ON sem.ID = cw.SemestersID LEFT OUTER JOIN\r\n                                  " +
                "  Course AS c ON c.ID = cw.CourseID LEFT OUTER JOIN\r\n                           " +
                "         CommonFields AS grade ON grade.ID = cw.GradeID\r\n                  UNION" +
                " ALL\r\n                  SELECT s.StudentNumber AS StudentID, s.FirstName + \' \' +" +
                " s.LastName AS Name, sem.Name + \' \' + CONVERT(nvarchar(4), cw.Year) AS Semester," +
                " c.CourseNum AS Course, c.CourseName AS Title, grade.Name AS Grade, \r\n          " +
                "                          CAST(CASE WHEN grade.GradePoint < 2 THEN 0 ELSE c.Cred" +
                "its END AS nvarchar(10)) AS Credits\r\n                  FROM     Student AS s RIG" +
                "HT OUTER JOIN\r\n                                    Coursework AS cw ON cw.Studen" +
                "tID = s.Id LEFT OUTER JOIN\r\n                                    CommonFields AS " +
                "sem ON sem.ID = cw.SemestersID LEFT OUTER JOIN\r\n                                " +
                "    Course AS c ON c.ID = cw.CourseID LEFT OUTER JOIN\r\n                         " +
                "           CommonFields AS grade ON grade.ID = cw.GradeID\r\n                  UNI" +
                "ON\r\n                  SELECT s.StudentNumber AS StudentID, s.FirstName + \' \' + s" +
                ".LastName AS Name, sem.Name + \' \' + CONVERT(nvarchar(4), cw.Year) AS Semester, N" +
                "ULL AS Course, NULL AS Title, \'Total Number of Credits\' AS Grade, \r\n            " +
                "                        CAST(SUM(CASE WHEN grade.GradePoint < 2 THEN 0 ELSE c.Cr" +
                "edits END) AS nvarchar(10)) AS Credits\r\n                  FROM     Student AS s " +
                "RIGHT OUTER JOIN\r\n                                    Coursework AS cw ON cw.Stu" +
                "dentID = s.Id LEFT OUTER JOIN\r\n                                    CommonFields " +
                "AS sem ON sem.ID = cw.SemestersID LEFT OUTER JOIN\r\n                             " +
                "       Course AS c ON c.ID = cw.CourseID LEFT OUTER JOIN\r\n                      " +
                "              CommonFields AS grade ON grade.ID = cw.GradeID\r\n                  " +
                "GROUP BY sem.Name + \' \' + CONVERT(nvarchar(4), cw.Year), s.StudentNumber, s.Firs" +
                "tName + \' \' + s.LastName\r\n                  UNION\r\n                  SELECT s.St" +
                "udentNumber AS StudentID, s.FirstName + \' \' + s.LastName AS Name, sem.Name + \' \'" +
                " + CONVERT(nvarchar(4), cw.Year) AS Semester, NULL AS Course, NULL AS Title, \'Se" +
                "mester GPA\' AS Grade, CAST(CONVERT(DECIMAL(10, \r\n                               " +
                "     2), SUM(grade.GradePoint) / COUNT(grade.GradePoint)) AS nvarchar(10)) AS Cr" +
                "edits\r\n                  FROM     Student AS s RIGHT OUTER JOIN\r\n               " +
                "                     Coursework AS cw ON cw.StudentID = s.Id LEFT OUTER JOIN\r\n  " +
                "                                  CommonFields AS sem ON sem.ID = cw.SemestersID" +
                " LEFT OUTER JOIN\r\n                                    Course AS c ON c.ID = cw.C" +
                "ourseID LEFT OUTER JOIN\r\n                                    CommonFields AS gra" +
                "de ON grade.ID = cw.GradeID\r\n                  GROUP BY sem.Name + \' \' + CONVERT" +
                "(nvarchar(4), cw.Year), s.StudentNumber, s.FirstName + \' \' + s.LastName) AS a\r\nW" +
                "HERE  (Name = @Student) OR\r\n                  (ISNULL(@Student, \'\') = \'\')\r\nORDER" +
                " BY StudentID, Semester DESC, CASE WHEN [Grade] IS NULL THEN 1 WHEN [Grade] = \'T" +
                "otal Number of Credits\' THEN 3 WHEN [Grade] = \'Semester GPA\' THEN 4 ELSE 2 END";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Student", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.CourseworkDataTable dataTable, string Student) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Student == null)) {
                throw new global::System.ArgumentNullException("Student");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Student));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.CourseworkDataTable GetData(string Student) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Student == null)) {
                throw new global::System.ArgumentNullException("Student");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Student));
            }
            DataSet1.CourseworkDataTable dataTable = new DataSet1.CourseworkDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PerformanceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PerformanceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Performance";
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Category", "Category");
            tableMapping.ColumnMappings.Add("Information", "Information");
            tableMapping.ColumnMappings.Add("StatusType", "StatusType");
            tableMapping.ColumnMappings.Add("StatusDescription", "StatusDescription");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SchoolContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT StudentID, Name, StatusType, Category, Information, StatusDescription\r\nFRO" +
                "M     (SELECT s.StudentNumber AS StudentID, s.FirstName + \' \' + s.LastName AS Na" +
                "me, \'Performance\' AS StatusType, categ.Name AS Category, p.CategoryInfo AS Infor" +
                "mation, \r\n                                    CASE WHEN categ.Name = \'Publicatio" +
                "n\' THEN pubs.Name WHEN categ.Name = \'Abstract\' THEN abstract.Name WHEN categ.Nam" +
                "e = \'Proposal\' THEN props.Name WHEN categ.Name = \'Teaching\' THEN teach.Name END " +
                "AS StatusDescription\r\n                  FROM      Performance AS p LEFT OUTER JO" +
                "IN\r\n                                    Student AS s ON s.Id = p.StudentID LEFT " +
                "OUTER JOIN\r\n                                    CommonFields AS categ ON categ.I" +
                "D = p.CategoryID LEFT OUTER JOIN\r\n                                    CommonFiel" +
                "ds AS pubs ON pubs.ID = p.PublicationStatsID LEFT OUTER JOIN\r\n                  " +
                "                  CommonFields AS abstract ON abstract.ID = p.AbstractStatsID LE" +
                "FT OUTER JOIN\r\n                                    CommonFields AS props ON prop" +
                "s.ID = p.ProposalStatsID LEFT OUTER JOIN\r\n                                    Co" +
                "mmonFields AS teach ON teach.ID = p.TeachingStatsID\r\n                  UNION\r\n  " +
                "                SELECT s.StudentNumber AS StudentID, s.FirstName + \' \' + s.LastN" +
                "ame AS Name, NULL AS StatusType, NULL AS Category, \'Number of Performance Items\'" +
                " AS Information, CONVERT(nvarchar(20), COUNT(p.CategoryInfo)) \r\n                " +
                "                    AS StatusDescription\r\n                  FROM     Performance" +
                " AS p LEFT OUTER JOIN\r\n                                    Student AS s ON s.Id " +
                "= p.StudentID LEFT OUTER JOIN\r\n                                    CommonFields " +
                "AS categ ON categ.ID = p.CategoryID LEFT OUTER JOIN\r\n                           " +
                "         CommonFields AS pubs ON pubs.ID = p.PublicationStatsID LEFT OUTER JOIN\r" +
                "\n                                    CommonFields AS abstract ON abstract.ID = p" +
                ".AbstractStatsID LEFT OUTER JOIN\r\n                                    CommonFiel" +
                "ds AS props ON props.ID = p.ProposalStatsID LEFT OUTER JOIN\r\n                   " +
                "                 CommonFields AS teach ON teach.ID = p.TeachingStatsID\r\n        " +
                "          GROUP BY s.StudentNumber, s.FirstName, s.LastName\r\n                  U" +
                "NION ALL\r\n                  SELECT s.StudentNumber AS StudentID, s.FirstName + \'" +
                " \' + s.LastName AS Name, \'Activity Summary\' AS StatusType, NULL AS Category, g.F" +
                "ileName AS Information, a.ActivitySummaryDesc AS StatusDescription\r\n            " +
                "      FROM     Student AS s RIGHT OUTER JOIN\r\n                                  " +
                "  Activity AS a ON s.Id = a.StudentID RIGHT OUTER JOIN\r\n                        " +
                "            [File] AS g ON g.ActivityId = a.ID\r\n                  WHERE  (g.File" +
                "Type = 0)\r\n                  UNION ALL\r\n                  SELECT s.StudentNumber" +
                " AS StudentID, s.FirstName + \' \' + s.LastName AS Name, NULL AS StatusType, NULL " +
                "AS Category, \'Number of Activity Summary Documents\' AS Information, CONVERT(nvar" +
                "char(100), \r\n                                    COUNT(a.ActivitySummaryDesc)) A" +
                "S StatusDescription\r\n                  FROM     Student AS s RIGHT OUTER JOIN\r\n " +
                "                                   Activity AS a ON s.Id = a.StudentID RIGHT OUT" +
                "ER JOIN\r\n                                    [File] AS g ON g.ActivityId = a.ID\r" +
                "\n                  WHERE  (g.FileType = 0)\r\n                  GROUP BY s.Student" +
                "Number, s.FirstName, s.LastName) AS Performance\r\nWHERE  (Name = @Student) OR\r\n  " +
                "                (ISNULL(@Student, \'\') = \'\')\r\nORDER BY Name, CASE WHEN [StatusTyp" +
                "e] = \'Performance\' THEN 1 WHEN [StatusType] IS NULL AND [Information] = \'Number " +
                "of Performance Items\' THEN 2 WHEN [StatusType] = \'Activity Summary\' THEN 3 WHEN " +
                "[StatusType] IS NULL AND \r\n                  [Information] = \'Number of Activity" +
                " Summary Documents\' THEN 4 ELSE 5 END, \r\n                  CASE WHEN [Category] " +
                "= \'Performance\' THEN 1 WHEN [Category] = \'Publication\' THEN 2 WHEN [Category] = " +
                "\'Abstract\' THEN 3 WHEN [Category] = \'Proposal\' THEN 4 WHEN [Category] = \'Teachin" +
                "g\' THEN 5 WHEN [Category] IS NULL AND \r\n                  [Information] = \'Numbe" +
                "r of Performance Items\' THEN 6 ELSE 7 END";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Student", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PerformanceDataTable dataTable, string Student) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Student == null)) {
                throw new global::System.ArgumentNullException("Student");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Student));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PerformanceDataTable GetData(string Student) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Student == null)) {
                throw new global::System.ArgumentNullException("Student");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Student));
            }
            DataSet1.PerformanceDataTable dataTable = new DataSet1.PerformanceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RequirementsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public RequirementsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Requirements";
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Advisor", "Advisor");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("QualifiyingExamination", "QualifiyingExamination");
            tableMapping.ColumnMappings.Add("ResearchTopic", "ResearchTopic");
            tableMapping.ColumnMappings.Add("ProposalPresentation", "ProposalPresentation");
            tableMapping.ColumnMappings.Add("ComprehensiveExam", "ComprehensiveExam");
            tableMapping.ColumnMappings.Add("CommitteeMembers", "CommitteeMembers");
            tableMapping.ColumnMappings.Add("FinalDefenseTitle", "FinalDefenseTitle");
            tableMapping.ColumnMappings.Add("FinalDefenseResult", "FinalDefenseResult");
            tableMapping.ColumnMappings.Add("ManuscriptFile", "ManuscriptFile");
            tableMapping.ColumnMappings.Add("DegreeAwarded", "DegreeAwarded");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SchoolContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DISTINCT \r\n                  s.StudentNumber AS StudentID, s.FirstName + \'" +
                " \' + s.LastName AS Name, qr.Name + \'ed - \' + CONVERT(CHAR(10), g.DateOfQualifica" +
                "tion, 101) + CASE WHEN qr2.ID IS NULL THEN \'\' ELSE \'; \' + qr2.Name + \'ed - \' + C" +
                "ONVERT(CHAR(10), \r\n                  g.DateOfQualification2, 101) END AS Qualifi" +
                "yingExamination, g.Form2Title AS ResearchTopic, fr.Name + \'ed -  \' + CONVERT(CHA" +
                "R(10), g.Form2Date, 101) AS ProposalPresentation, cer.Name + \'ed - \' + CONVERT(C" +
                "HAR(10), \r\n                  g.DateOfCompExam, 101) + CASE WHEN cer2.ID IS NULL " +
                "THEN \'\' ELSE \'; \' + cer2.Name + \'ed - \' + CONVERT(CHAR(10), g.DateOfCompExam2, 1" +
                "01) END AS ComprehensiveExam, \r\n                  g.AdvisorName + \' - \' + g.Advi" +
                "sorDepartment + \' (\' + g.AdvisorUniversity + \')\' AS Advisor, STUFF\r\n            " +
                "          ((SELECT DISTINCT \'; \' + cm2.Name + \' - \' + cm2.Department + \' (\' + cm" +
                "2.University + \')\' AS Expr1\r\n                        FROM      CommitteeMember A" +
                "S cm2 LEFT OUTER JOIN\r\n                                          Student AS s2 O" +
                "N cm2.StudentID = s2.Id\r\n                        WHERE   (s2.Id = s.Id) FOR XML " +
                "PATH(\'\')), 1, 1, \'\') AS CommitteeMembers, g.Form3Title AS FinalDefenseTitle, fdr" +
                ".Name + \'ed - \' + CONVERT(CHAR(10), g.Form3Date, 101) AS FinalDefenseResult, STU" +
                "FF\r\n                      ((SELECT DISTINCT \'; \' + mFile2.FileName AS Expr1\r\n   " +
                "                     FROM      [File] AS mFile2 RIGHT OUTER JOIN\r\n              " +
                "                            Manuscript AS m2 ON m2.ID = mFile2.ManuscriptId LEFT" +
                " OUTER JOIN\r\n                                          Student AS s2 ON m2.Stude" +
                "ntID = s2.Id\r\n                        WHERE   (s2.Id = s.Id) FOR XML PATH(\'\')), " +
                "1, 1, \'\') AS ManuscriptFile, degreeEnd.Name + \' \' + CONVERT(NVARCHAR(4), g.Degre" +
                "eEndYear) AS DegreeAwarded\r\nFROM     Graduation AS g LEFT OUTER JOIN\r\n          " +
                "        Student AS s ON g.StudentID = s.Id LEFT OUTER JOIN\r\n                  Co" +
                "mmonFields AS qr ON g.QualifierResultId = qr.ID LEFT OUTER JOIN\r\n               " +
                "   CommonFields AS qr2 ON g.Qualifier2ResultId = qr2.ID LEFT OUTER JOIN\r\n       " +
                "           CommonFields AS fr ON g.Form2ResultId = fr.ID LEFT OUTER JOIN\r\n      " +
                "            CommonFields AS cer ON g.CompExamResultId = cer.ID LEFT OUTER JOIN\r\n" +
                "                  CommonFields AS cer2 ON g.CompExam2ResultId = cer2.ID LEFT OUT" +
                "ER JOIN\r\n                  CommonFields AS fdr ON g.Form3ResultId = fdr.ID LEFT " +
                "OUTER JOIN\r\n                  Manuscript AS m ON m.StudentID = s.Id LEFT OUTER J" +
                "OIN\r\n                  [File] AS mFile ON mFile.ManuscriptId = m.ID LEFT OUTER J" +
                "OIN\r\n                  CommonFields AS degreeEnd ON degreeEnd.ID = g.DegreeEndSe" +
                "msId\r\nWHERE  ((DATEFROMPARTS(s.DegreeStartYear, 01, 01) < @FromDate AND NOT (DAT" +
                "EFROMPARTS(g.DegreeEndYear, 1, 1) < @FromDate) OR\r\n                  DATEFROMPAR" +
                "TS(s.DegreeStartYear, 01, 01) < @FromDate AND g.DegreeEndYear IS NULL OR\r\n      " +
                "            DATEFROMPARTS(s.DegreeStartYear, 01, 01) >= @FromDate AND DATEFROMPA" +
                "RTS(s.DegreeStartYear, 01, 01) <= @ToDate) AND NOT (DATEFROMPARTS(s.DegreeStartY" +
                "ear, 01, 01) > @ToDate) OR\r\n                  ISNULL(@FromDate, \'\') = \'\' OR\r\n   " +
                "               ISNULL(@ToDate, \'\') = \'\') AND (s.FirstName + \' \' + s.LastName = @" +
                "Student OR\r\n                  ISNULL(@Student, \'\') = \'\') AND ((CASE WHEN (degree" +
                "End.Name IS NULL AND g.DegreeEndYear IS NULL) THEN \'Current\' ELSE \'Former\' END) " +
                "= @CurrentFormer OR\r\n                  ISNULL(@CurrentFormer, \'\') = \'\')";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Student", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CurrentFormer", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.RequirementsDataTable dataTable, string FromDate, string ToDate, string Student, string CurrentFormer) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate == null)) {
                throw new global::System.ArgumentNullException("FromDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FromDate));
            }
            if ((ToDate == null)) {
                throw new global::System.ArgumentNullException("ToDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ToDate));
            }
            if ((Student == null)) {
                throw new global::System.ArgumentNullException("Student");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Student));
            }
            if ((CurrentFormer == null)) {
                throw new global::System.ArgumentNullException("CurrentFormer");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(CurrentFormer));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.RequirementsDataTable GetData(string FromDate, string ToDate, string Student, string CurrentFormer) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate == null)) {
                throw new global::System.ArgumentNullException("FromDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(FromDate));
            }
            if ((ToDate == null)) {
                throw new global::System.ArgumentNullException("ToDate");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ToDate));
            }
            if ((Student == null)) {
                throw new global::System.ArgumentNullException("Student");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Student));
            }
            if ((CurrentFormer == null)) {
                throw new global::System.ArgumentNullException("CurrentFormer");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(CurrentFormer));
            }
            DataSet1.RequirementsDataTable dataTable = new DataSet1.RequirementsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PostgraduationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PostgraduationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Postgraduation";
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("CVs", "CVs");
            tableMapping.ColumnMappings.Add("EmploymentHistory", "EmploymentHistory");
            tableMapping.ColumnMappings.Add("PublicationsPeerReviewedJournalonlyPublished", "PublicationsPeerReviewedJournalonlyPublished");
            tableMapping.ColumnMappings.Add("TotalNumberofPublications", "TotalNumberofPublications");
            tableMapping.ColumnMappings.Add("Grants", "Grants");
            tableMapping.ColumnMappings.Add("TotalNumberofGrants", "TotalNumberofGrants");
            tableMapping.ColumnMappings.Add("HonorsAwards", "HonorsAwards");
            tableMapping.ColumnMappings.Add("TotalNumberofHonorsAwards", "TotalNumberofHonorsAwards");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SchoolContext"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT s.StudentNumber AS StudentID, s.FirstName + \' \' + s.LastName AS Name, s.Ot" +
                "herEmail AS Email, s.Phone, STUFF\r\n                      ((SELECT DISTINCT \'; \' " +
                "+ cvFile2.FileName AS Expr1\r\n                        FROM      [File] AS cvFile2" +
                " LEFT OUTER JOIN\r\n                                          CurriculumVitae AS c" +
                "v2 ON cvFile2.CurriculumVitaeId = cv2.ID LEFT OUTER JOIN\r\n                      " +
                "                    Student AS s2 ON cv2.StudentID = s2.Id\r\n                    " +
                "    WHERE   (s2.Id = s.Id) FOR XML PATH(\'\')), 1, 1, \'\') AS CVs, STUFF\r\n         " +
                "             ((SELECT DISTINCT \'; \' + pe2.Position + \'-\' + pe2.Employer + \' (\' +" +
                " sm2.Name + \' \' + CONVERT(nvarchar(4), pe2.StartYear) + \'-\' + em2.Name + \' \' + C" +
                "ONVERT(nvarchar(4), pe2.EndYear) + \')\' AS Expr1\r\n                        FROM   " +
                "   PreviousEmployment AS pe2 LEFT OUTER JOIN\r\n                                  " +
                "        Student AS s2 ON pe2.StudentID = s2.Id LEFT OUTER JOIN\r\n                " +
                "                          CommonFields AS sm2 ON pe2.StartMonthId = sm2.ID LEFT " +
                "OUTER JOIN\r\n                                          CommonFields AS em2 ON pe2" +
                ".EndMonthId = em2.ID\r\n                        WHERE   (s2.Id = s.Id) FOR XML PAT" +
                "H(\'\')), 1, 1, \'\') AS EmploymentHistory, STUFF\r\n                      ((SELECT DI" +
                "STINCT \'; \' + pub2.PublicationInformation + \' (\' + pm2.Name + \' \' + CONVERT(nvar" +
                "char(4), pub2.PubYear) + \')\' AS Expr1\r\n                        FROM      Publica" +
                "tions AS pub2 LEFT OUTER JOIN\r\n                                          Student" +
                " AS s2 ON pub2.StudentID = s2.Id LEFT OUTER JOIN\r\n                              " +
                "            CommonFields AS pm2 ON pub2.PubMonthId = pm2.ID\r\n                   " +
                "     WHERE   (s2.Id = s.Id) FOR XML PATH(\'\')), 1, 1, \'\') AS PublicationsPeerRevi" +
                "ewedJournalonlyPublished, publ.TotalNumberofPublications, STUFF\r\n               " +
                "       ((SELECT DISTINCT \'; \' + grt2.GrantInformation + \' (\' + gm2.Name + \' \' + " +
                "CONVERT(nvarchar(4), grt2.GrantYear) + \')\' AS Expr1\r\n                        FRO" +
                "M      Grants AS grt2 LEFT OUTER JOIN\r\n                                         " +
                " CommonFields AS gm2 ON grt2.GrantMonthId = gm2.ID LEFT OUTER JOIN\r\n            " +
                "                              Student AS s2 ON grt2.StudentID = s2.Id\r\n         " +
                "               WHERE   (s2.Id = s.Id) FOR XML PATH(\'\')), 1, 1, \'\') AS Grants, gr" +
                "ants.TotalNumberofGrants, STUFF\r\n                      ((SELECT DISTINCT \'; \' + " +
                "h2.HonorInformation + \' (\' + hm2.Name + \' \' + CONVERT(nvarchar(4), h2.HonorYear)" +
                " + \')\' AS Expr1\r\n                        FROM      Honors AS h2 LEFT OUTER JOIN\r" +
                "\n                                          CommonFields AS hm2 ON h2.HonorMonthI" +
                "d = hm2.ID LEFT OUTER JOIN\r\n                                          Student AS" +
                " s2 ON h2.StudentID = s2.Id\r\n                        WHERE   (s2.Id = s.Id) FOR " +
                "XML PATH(\'\')), 1, 1, \'\') AS HonorsAwards, honors.TotalNumberofHonorsAwards\r\nFROM" +
                "     Student AS s LEFT OUTER JOIN\r\n                  Graduation AS g ON g.Studen" +
                "tID = s.Id LEFT OUTER JOIN\r\n                      (SELECT s.Id, \'<u>Total: <stro" +
                "ng>\' + CONVERT(nvarchar(4), COUNT(*)) + \'</strong></u>\' + CHAR(13) + \'<br /><br " +
                "/>Before Program: \' + CONVERT(nvarchar(4), COUNT(before.ID)) + CHAR(13) + CASE W" +
                "HEN g.DegreeEndYear IS NOT NULL \r\n                                         THEN " +
                "(\'<br /><br />During Program: \' + CONVERT(nvarchar(4), COUNT(durin2.ID)) + CHAR(" +
                "13) + \'<br /><br />Year 1 (\' + CONVERT(nvarchar(30), CASE WHEN g.DegreeEndSemsId" +
                " = 1 THEN \'June \' + CONVERT(nvarchar(4), \r\n                                     " +
                "    g.DegreeEndYear) + \' - May \' + CONVERT(nvarchar(4), g.DegreeEndYear + 1) + \'" +
                "): \' WHEN g.DegreeEndSemsId = 3 THEN \'September\' + CONVERT(nvarchar(4), g.Degree" +
                "EndYear) + \' - August\' + CONVERT(nvarchar(4), \r\n                                " +
                "         g.DegreeEndYear + 1) + \'): \' ELSE \'January\' + CONVERT(nvarchar(4), g.De" +
                "greeEndYear + 1) + \' - December\' + CONVERT(nvarchar(4), g.DegreeEndYear + 1) + \'" +
                "): \' END) + CONVERT(nvarchar(4), COUNT(year_1.ID)) + CHAR(13) \r\n                " +
                "                         + \'<br /><br />Year 2 (\' + CONVERT(nvarchar(30), CASE W" +
                "HEN g.DegreeEndSemsId = 1 THEN \'June \' + CONVERT(nvarchar(4), g.DegreeEndYear + " +
                "1) + \' - May \' + CONVERT(nvarchar(4), g.DegreeEndYear + 2) \r\n                   " +
                "                      + \'): \' WHEN g.DegreeEndSemsId = 3 THEN \'September\' + CONV" +
                "ERT(nvarchar(4), g.DegreeEndYear + 1) + \' - August\' + CONVERT(nvarchar(4), g.Deg" +
                "reeEndYear + 2) + \'): \' ELSE \'January\' + CONVERT(nvarchar(4), \r\n                " +
                "                         g.DegreeEndYear + 2) + \' - December\' + CONVERT(nvarchar" +
                "(4), g.DegreeEndYear + 2) + \'): \' END) + CONVERT(nvarchar(4), COUNT(year_2.ID)) " +
                "+ CHAR(13) + \'<br /><br />Year 3 (\' + CONVERT(nvarchar(30), \r\n                  " +
                "                       CASE WHEN g.DegreeEndSemsId = 1 THEN \'June \' + CONVERT(nv" +
                "archar(4), g.DegreeEndYear + 2) + \' - May \' + CONVERT(nvarchar(4), g.DegreeEndYe" +
                "ar + 3) \r\n                                         + \'): \' WHEN g.DegreeEndSemsI" +
                "d = 3 THEN \'September\' + CONVERT(nvarchar(4), g.DegreeEndYear + 2) + \' - August\'" +
                " + CONVERT(nvarchar(4), g.DegreeEndYear + 3) + \'): \' ELSE \'January\' + CONVERT(nv" +
                "archar(4), \r\n                                         g.DegreeEndYear + 3) + \' -" +
                " December\' + CONVERT(nvarchar(4), g.DegreeEndYear + 3) + \'): \' END) + CONVERT(nv" +
                "archar(4), COUNT(year_3.ID)) + CHAR(13) + \'<br /><br />Year 4 (\' + CONVERT(nvarc" +
                "har(30), \r\n                                         CASE WHEN g.DegreeEndSemsId " +
                "= 1 THEN \'June \' + CONVERT(nvarchar(4), g.DegreeEndYear + 3) + \' - May \' + CONVE" +
                "RT(nvarchar(4), g.DegreeEndYear + 4) \r\n                                         " +
                "+ \'): \' WHEN g.DegreeEndSemsId = 3 THEN \'September\' + CONVERT(nvarchar(4), g.Deg" +
                "reeEndYear + 3) + \' - August\' + CONVERT(nvarchar(4), g.DegreeEndYear + 4) + \'): " +
                "\' ELSE \'January\' + CONVERT(nvarchar(4), \r\n                                      " +
                "   g.DegreeEndYear + 4) + \' - December\' + CONVERT(nvarchar(4), g.DegreeEndYear +" +
                " 4) + \'): \' END) + CONVERT(nvarchar(4), COUNT(year_4.ID)) + CHAR(13) + \'<br /><b" +
                "r />Year 5 (\' + CONVERT(nvarchar(30), \r\n                                        " +
                " CASE WHEN g.DegreeEndSemsId = 1 THEN \'June \' + CONVERT(nvarchar(4), g.DegreeEnd" +
                "Year + 4) + \' - May \' + CONVERT(nvarchar(4), g.DegreeEndYear + 5) \r\n            " +
                "                             + \'): \' WHEN g.DegreeEndSemsId = 3 THEN \'September\'" +
                " + CONVERT(nvarchar(4), g.DegreeEndYear + 4) + \' - August\' + CONVERT(nvarchar(4)" +
                ", g.DegreeEndYear + 5) + \'): \' ELSE \'January\' + CONVERT(nvarchar(4), \r\n         " +
                "                                g.DegreeEndYear + 5) + \' - December\' + CONVERT(n" +
                "varchar(4), g.DegreeEndYear + 5) + \'): \' END) + CONVERT(nvarchar(4), COUNT(year_" +
                "5.ID))) ELSE \'<br /><br />During Program: \' + CONVERT(nvarchar(4), COUNT(durin1." +
                "ID)) \r\n                                         END AS TotalNumberofPublications" +
                "\r\n                       FROM      Publications AS pub INNER JOIN\r\n             " +
                "                            Student AS s ON pub.StudentID = s.Id LEFT OUTER JOIN" +
                "\r\n                                         Graduation AS g ON g.StudentID = s.Id" +
                " LEFT OUTER JOIN\r\n                                         CommonFields AS pubMo" +
                "nth ON pub.PubMonthId = pubMonth.ID LEFT OUTER JOIN\r\n                           " +
                "              Publications AS before ON before.ID = pub.ID AND CONVERT(DATETIME," +
                " CONVERT(nvarchar(2), pubMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4), bef" +
                "ore.PubYear)) < CONVERT(DATETIME, CONVERT(nvarchar(2), \r\n                       " +
                "                  CASE WHEN s.DegreeStartSemsId = 1 THEN 5 WHEN s.DegreeStartSem" +
                "sId = 3 THEN 8 ELSE 12 END) + \'/31/\' + CONVERT(nvarchar(4), s.DegreeStartYear)) " +
                "LEFT OUTER JOIN\r\n                                         Publications AS durin1" +
                " ON durin1.ID = pub.ID AND CONVERT(DATETIME, CONVERT(nvarchar(2), pubMonth.Displ" +
                "ayOrder) + \'/15/\' + CONVERT(nvarchar(4), durin1.PubYear)) > CONVERT(DATETIME, CO" +
                "NVERT(nvarchar(2), \r\n                                         CASE WHEN s.Degree" +
                "StartSemsId = 1 THEN 5 WHEN s.DegreeStartSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\'" +
                " + CONVERT(nvarchar(4), s.DegreeStartYear)) LEFT OUTER JOIN\r\n                   " +
                "                      Publications AS durin2 ON durin2.ID = pub.ID AND CONVERT(D" +
                "ATETIME, CONVERT(nvarchar(2), pubMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarchar" +
                "(4), durin2.PubYear)) > CONVERT(DATETIME, CONVERT(nvarchar(2), \r\n               " +
                "                          CASE WHEN s.DegreeStartSemsId = 1 THEN 5 WHEN s.Degree" +
                "StartSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\' + CONVERT(nvarchar(4), s.DegreeStar" +
                "tYear)) AND CONVERT(DATETIME, CONVERT(nvarchar(2), \r\n                           " +
                "              pubMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4), durin2.PubY" +
                "ear)) <= CONVERT(DATETIME, CONVERT(nvarchar(2), CASE WHEN g.DegreeEndSemsId = 1 " +
                "THEN 5 WHEN g.DegreeEndSemsId = 3 THEN 8 ELSE 12 END) \r\n                        " +
                "                 + \'/31/\' + CONVERT(nvarchar(4), g.DegreeEndYear)) LEFT OUTER JO" +
                "IN\r\n                                         Publications AS year_1 ON year_1.ID" +
                " = pub.ID AND CONVERT(DATETIME, CONVERT(nvarchar(2), pubMonth.DisplayOrder) + \'/" +
                "15/\' + CONVERT(nvarchar(4), year_1.PubYear)) > CONVERT(DATETIME, CONVERT(nvarcha" +
                "r(2), \r\n                                         CASE WHEN g.DegreeEndSemsId = 1" +
                " THEN 5 WHEN g.DegreeEndSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\' + CONVERT(nvarch" +
                "ar(4), g.DegreeEndYear)) AND CONVERT(DATETIME, CONVERT(nvarchar(2), \r\n          " +
                "                               pubMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarcha" +
                "r(4), year_1.PubYear)) <= CONVERT(DATETIME, CONVERT(nvarchar(2), CASE WHEN g.Deg" +
                "reeEndSemsId = 1 THEN 5 WHEN g.DegreeEndSemsId = 3 THEN 8 ELSE 12 END) \r\n       " +
                "                                  + \'/31/\' + CONVERT(nvarchar(4), g.DegreeEndYea" +
                "r + 1)) LEFT OUTER JOIN\r\n                                         Publications A" +
                "S year_2 ON year_2.ID = pub.ID AND CONVERT(DATETIME, CONVERT(nvarchar(2), pubMon" +
                "th.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4), year_2.PubYear)) > CONVERT(DATE" +
                "TIME, CONVERT(nvarchar(2), \r\n                                         CASE WHEN " +
                "g.DegreeEndSemsId = 1 THEN 5 WHEN g.DegreeEndSemsId = 3 THEN 8 ELSE 12 END) + \'/" +
                "31/\' + CONVERT(nvarchar(4), g.DegreeEndYear + 1)) AND CONVERT(DATETIME, CONVERT(" +
                "nvarchar(2), \r\n                                         pubMonth.DisplayOrder) +" +
                " \'/15/\' + CONVERT(nvarchar(4), year_1.PubYear)) <= CONVERT(DATETIME, CONVERT(nva" +
                "rchar(2), CASE WHEN g.DegreeEndSemsId = 1 THEN 5 WHEN g.DegreeEndSemsId = 3 THEN" +
                " 8 ELSE 12 END) \r\n                                         + \'/31/\' + CONVERT(nv" +
                "archar(4), g.DegreeEndYear + 2)) LEFT OUTER JOIN\r\n                              " +
                "           Publications AS year_3 ON year_3.ID = pub.ID AND CONVERT(DATETIME, CO" +
                "NVERT(nvarchar(2), pubMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4), year_3" +
                ".PubYear)) > CONVERT(DATETIME, CONVERT(nvarchar(2), \r\n                          " +
                "               CASE WHEN g.DegreeEndSemsId = 1 THEN 5 WHEN g.DegreeEndSemsId = 3" +
                " THEN 8 ELSE 12 END) + \'/31/\' + CONVERT(nvarchar(4), g.DegreeEndYear + 2)) AND C" +
                "ONVERT(DATETIME, CONVERT(nvarchar(2), \r\n                                        " +
                " pubMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4), year_3.PubYear)) <= CONV" +
                "ERT(DATETIME, CONVERT(nvarchar(2), CASE WHEN g.DegreeEndSemsId = 1 THEN 5 WHEN g" +
                ".DegreeEndSemsId = 3 THEN 8 ELSE 12 END) \r\n                                     " +
                "    + \'/31/\' + CONVERT(nvarchar(4), g.DegreeEndYear + 3)) LEFT OUTER JOIN\r\n     " +
                "                                    Publications AS year_4 ON year_2.ID = pub.ID" +
                " AND CONVERT(DATETIME, CONVERT(nvarchar(2), pubMonth.DisplayOrder) + \'/15/\' + CO" +
                "NVERT(nvarchar(4), year_4.PubYear)) > CONVERT(DATETIME, CONVERT(nvarchar(2), \r\n " +
                "                                        CASE WHEN g.DegreeEndSemsId = 1 THEN 5 W" +
                "HEN g.DegreeEndSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\' + CONVERT(nvarchar(4), g." +
                "DegreeEndYear + 4)) AND CONVERT(DATETIME, CONVERT(nvarchar(2), \r\n               " +
                "                          pubMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4)," +
                " year_4.PubYear)) <= CONVERT(DATETIME, CONVERT(nvarchar(2), CASE WHEN g.DegreeEn" +
                "dSemsId = 1 THEN 5 WHEN g.DegreeEndSemsId = 3 THEN 8 ELSE 12 END) \r\n            " +
                "                             + \'/31/\' + CONVERT(nvarchar(4), g.DegreeEndYear + 5" +
                ")) LEFT OUTER JOIN\r\n                                         Publications AS yea" +
                "r_5 ON year_2.ID = pub.ID AND CONVERT(DATETIME, CONVERT(nvarchar(2), pubMonth.Di" +
                "splayOrder) + \'/15/\' + CONVERT(nvarchar(4), year_5.PubYear)) > CONVERT(DATETIME," +
                " CONVERT(nvarchar(2), \r\n                                         CASE WHEN g.Deg" +
                "reeEndSemsId = 1 THEN 5 WHEN g.DegreeEndSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\' " +
                "+ CONVERT(nvarchar(4), g.DegreeEndYear + 5)) AND CONVERT(DATETIME, CONVERT(nvarc" +
                "har(2), \r\n                                         pubMonth.DisplayOrder) + \'/15" +
                "/\' + CONVERT(nvarchar(4), year_5.PubYear)) <= CONVERT(DATETIME, CONVERT(nvarchar" +
                "(2), CASE WHEN g.DegreeEndSemsId = 1 THEN 5 WHEN g.DegreeEndSemsId = 3 THEN 8 EL" +
                "SE 12 END) \r\n                                         + \'/31/\' + CONVERT(nvarcha" +
                "r(4), g.DegreeEndYear + 6))\r\n                       GROUP BY s.Id, s.FirstName, " +
                "g.DegreeEndYear, g.DegreeEndSemsId) AS publ ON publ.Id = s.Id LEFT OUTER JOIN\r\n " +
                "                     (SELECT s.Id, \'<u>Total: <strong>\' + CONVERT(nvarchar(4), C" +
                "OUNT(*)) + \'</strong></u>\' + CHAR(13) + \'<br /><br />Before Program: \' + CONVERT" +
                "(nvarchar(4), COUNT(grBefore.ID)) + CHAR(13) + CASE WHEN g.DegreeEndYear IS NOT " +
                "NULL \r\n                                         THEN (\'<br /><br />During Progra" +
                "m: \' + CONVERT(nvarchar(4), COUNT(grDurin2.ID)) + CHAR(13) + \'<br /><br />After " +
                "Program: \' + CONVERT(nvarchar(4), COUNT(grAfter.ID))) \r\n                        " +
                "                 ELSE \'<br /><br />During Program: \' + CONVERT(nvarchar(4), COUN" +
                "T(grDurin1.ID)) END AS TotalNumberofGrants\r\n                       FROM      Gra" +
                "nts AS gr INNER JOIN\r\n                                         Student AS s ON g" +
                "r.StudentID = s.Id LEFT OUTER JOIN\r\n                                         Gra" +
                "duation AS g ON g.StudentID = s.Id LEFT OUTER JOIN\r\n                            " +
                "             CommonFields AS grantMonth ON gr.GrantMonthId = grantMonth.ID LEFT " +
                "OUTER JOIN\r\n                                         Grants AS grBefore ON grBef" +
                "ore.ID = gr.ID AND CONVERT(DATETIME, CONVERT(nvarchar(2), grantMonth.DisplayOrde" +
                "r) + \'/15/\' + CONVERT(nvarchar(4), grBefore.GrantYear)) < CONVERT(DATETIME, CONV" +
                "ERT(nvarchar(2), \r\n                                         CASE WHEN s.DegreeSt" +
                "artSemsId = 1 THEN 5 WHEN s.DegreeStartSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\' +" +
                " CONVERT(nvarchar(4), s.DegreeStartYear)) LEFT OUTER JOIN\r\n                     " +
                "                    Grants AS grDurin1 ON grDurin1.ID = gr.ID AND CONVERT(DATETI" +
                "ME, CONVERT(nvarchar(2), grantMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4)" +
                ", grDurin1.GrantYear)) > CONVERT(DATETIME, CONVERT(nvarchar(2), \r\n              " +
                "                           CASE WHEN s.DegreeStartSemsId = 1 THEN 5 WHEN s.Degre" +
                "eStartSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\' + CONVERT(nvarchar(4), s.DegreeSta" +
                "rtYear)) LEFT OUTER JOIN\r\n                                         Grants AS grD" +
                "urin2 ON grDurin2.ID = gr.ID AND CONVERT(DATETIME, CONVERT(nvarchar(2), grantMon" +
                "th.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4), grDurin2.GrantYear)) > CONVERT(" +
                "DATETIME, CONVERT(nvarchar(2), \r\n                                         CASE W" +
                "HEN s.DegreeStartSemsId = 1 THEN 5 WHEN s.DegreeStartSemsId = 3 THEN 8 ELSE 12 E" +
                "ND) + \'/31/\' + CONVERT(nvarchar(4), s.DegreeStartYear)) AND CONVERT(DATETIME, CO" +
                "NVERT(nvarchar(2), \r\n                                         grantMonth.Display" +
                "Order) + \'/15/\' + CONVERT(nvarchar(4), grDurin2.GrantYear)) <= CONVERT(DATETIME," +
                " CONVERT(nvarchar(2), \r\n                                         CASE WHEN g.Deg" +
                "reeEndSemsId = 1 THEN 5 WHEN g.DegreeEndSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\' " +
                "+ CONVERT(nvarchar(4), g.DegreeEndYear)) LEFT OUTER JOIN\r\n                      " +
                "                   Grants AS grAfter ON grAfter.ID = gr.ID AND CONVERT(DATETIME," +
                " CONVERT(nvarchar(2), grantMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4), g" +
                "rAfter.GrantYear)) > CONVERT(DATETIME, CONVERT(nvarchar(2), \r\n                  " +
                "                       CASE WHEN g.DegreeEndSemsId = 1 THEN 5 WHEN g.DegreeEndSe" +
                "msId = 3 THEN 8 ELSE 12 END) + \'/31/\' + CONVERT(nvarchar(4), g.DegreeEndYear))\r\n" +
                "                       GROUP BY s.Id, s.FirstName, g.DegreeEndYear, g.DegreeEndS" +
                "emsId) AS grants ON grants.Id = s.Id LEFT OUTER JOIN\r\n                      (SEL" +
                "ECT s.Id, \'<u>Total: <strong>\' + CONVERT(nvarchar(4), COUNT(*)) + \'</strong></u>" +
                "\' + CHAR(13) + \'<br /><br />Before Program: \' + CONVERT(nvarchar(4), COUNT(honBe" +
                "fore.ID)) + CHAR(13) \r\n                                         + CASE WHEN g.De" +
                "greeEndYear IS NOT NULL THEN (\'<br /><br />During Program: \' + CONVERT(nvarchar(" +
                "4), COUNT(honDurin2.ID)) + CHAR(13) + \'<br /><br />After Program: \' + CONVERT(nv" +
                "archar(4), COUNT(honAfter.ID))) \r\n                                         ELSE " +
                "\'<br /><br />During Program: \' + CONVERT(nvarchar(4), COUNT(honDurin1.ID)) END A" +
                "S TotalNumberofHonorsAwards\r\n                       FROM      Honors AS hon INNE" +
                "R JOIN\r\n                                         Student AS s ON hon.StudentID =" +
                " s.Id LEFT OUTER JOIN\r\n                                         Graduation AS g " +
                "ON g.StudentID = s.Id LEFT OUTER JOIN\r\n                                         " +
                "CommonFields AS honorMonth ON hon.HonorMonthId = honorMonth.ID LEFT OUTER JOIN\r\n" +
                "                                         Honors AS honBefore ON honBefore.ID = h" +
                "on.ID AND CONVERT(DATETIME, CONVERT(nvarchar(2), honorMonth.DisplayOrder) + \'/15" +
                "/\' + CONVERT(nvarchar(4), honBefore.HonorYear)) < CONVERT(DATETIME, \r\n          " +
                "                               CONVERT(nvarchar(2), CASE WHEN s.DegreeStartSemsI" +
                "d = 1 THEN 5 WHEN s.DegreeStartSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\' + CONVERT" +
                "(nvarchar(4), s.DegreeStartYear)) LEFT OUTER JOIN\r\n                             " +
                "            Honors AS honDurin1 ON honDurin1.ID = hon.ID AND CONVERT(DATETIME, C" +
                "ONVERT(nvarchar(2), honorMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4), hon" +
                "Durin1.HonorYear)) > CONVERT(DATETIME, \r\n                                       " +
                "  CONVERT(nvarchar(2), CASE WHEN s.DegreeStartSemsId = 1 THEN 5 WHEN s.DegreeSta" +
                "rtSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\' + CONVERT(nvarchar(4), s.DegreeStartYe" +
                "ar)) LEFT OUTER JOIN\r\n                                         Honors AS honDuri" +
                "n2 ON honDurin2.ID = hon.ID AND CONVERT(DATETIME, CONVERT(nvarchar(2), honorMont" +
                "h.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4), honDurin2.HonorYear)) > CONVERT(" +
                "DATETIME, \r\n                                         CONVERT(nvarchar(2), CASE W" +
                "HEN s.DegreeStartSemsId = 1 THEN 5 WHEN s.DegreeStartSemsId = 3 THEN 8 ELSE 12 E" +
                "ND) + \'/31/\' + CONVERT(nvarchar(4), s.DegreeStartYear)) AND CONVERT(DATETIME, \r\n" +
                "                                         CONVERT(nvarchar(2), honorMonth.Display" +
                "Order) + \'/15/\' + CONVERT(nvarchar(4), honDurin2.HonorYear)) <= CONVERT(DATETIME" +
                ", CONVERT(nvarchar(2), \r\n                                         CASE WHEN g.De" +
                "greeEndSemsId = 1 THEN 5 WHEN g.DegreeEndSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\'" +
                " + CONVERT(nvarchar(4), g.DegreeEndYear)) LEFT OUTER JOIN\r\n                     " +
                "                    Honors AS honAfter ON honAfter.ID = hon.ID AND CONVERT(DATET" +
                "IME, CONVERT(nvarchar(2), honorMonth.DisplayOrder) + \'/15/\' + CONVERT(nvarchar(4" +
                "), honAfter.HonorYear)) > CONVERT(DATETIME, CONVERT(nvarchar(2), \r\n             " +
                "                            CASE WHEN g.DegreeEndSemsId = 1 THEN 5 WHEN g.Degree" +
                "EndSemsId = 3 THEN 8 ELSE 12 END) + \'/31/\' + CONVERT(nvarchar(4), g.DegreeEndYea" +
                "r))\r\n                       GROUP BY s.Id, s.FirstName, g.DegreeEndYear, g.Degre" +
                "eEndSemsId) AS honors ON honors.Id = s.Id\r\nWHERE  (@Student = s.FirstName + \' \' " +
                "+ s.LastName) OR\r\n                  (@Student IS NULL)\r\nGROUP BY s.Id, s.Student" +
                "Number, s.FirstName, s.LastName, s.OtherEmail, s.Phone, g.DegreeEndYear, g.Degre" +
                "eEndSemsId, publ.TotalNumberofPublications, grants.TotalNumberofGrants, honors.T" +
                "otalNumberofHonorsAwards";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Student", global::System.Data.SqlDbType.VarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.PostgraduationDataTable dataTable, string Student) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Student == null)) {
                throw new global::System.ArgumentNullException("Student");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Student));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.PostgraduationDataTable GetData(string Student) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Student == null)) {
                throw new global::System.ArgumentNullException("Student");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Student));
            }
            DataSet1.PostgraduationDataTable dataTable = new DataSet1.PostgraduationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591