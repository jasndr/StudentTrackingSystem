@*@model StudentTrackingSystem3.Models.G_Student*@
@using MvcCheckBoxList.Model
@model StudentTrackingSystem3.ViewModels.UltimateViewModel

@{
    ViewBag.Title = "Student Background";
}

<h2>Graduate Student Background</h2>
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        <form>
            <h4>Background details for <strong>@Html.DisplayFor(model => model.G_Student.FirstName) @Html.DisplayFor(model => model.G_Student.LastName)</strong></h4>

            <br />
            <div class="row menuNav" id="menuNav_background">
                @Html.ActionLink("Background", "Edit", "Student", new { id = Model.G_Student.Id }, new { @class = "btn btn-primary infoNav menuNav_background col-md-2 col-xs-12" })

                @Html.ActionLink("Coursework", "Index", "Coursework", new { id = Model.G_Student.Id }, new { @class = "btn btn-primary infoNav menuNav_coursework col-md-2 col-xs-12" })

                @Html.ActionLink("Performance & Activity", "Edit", new { id = Model.G_Student.Id, Href = "#" }, new { @class = "btn btn-primary infoNav menuNav_performance col-md-2 col-xs-12" })

                @Html.ActionLink("Graduation", "Edit", null, new { id = Model.G_Student.Id, Href = "#" }, new { @class = "btn btn-primary infoNav menuNav_graduation col-md-2 col-xs-12" })

                @Html.ActionLink("Post-Graduation", "Edit", new { id = Model.G_Student.Id, Href = "#" }, new { @class = "btn btn-primary infoNav menuNav_postgrad col-md-2 col-xs-12" })
            </div>

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.G_Student.Id)

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.StudentNumber, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.EditorFor(model => model.G_Student.StudentNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.G_Student.StudentNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <br />

            <div class="row">
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.FirstName, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.EditorFor(model => model.G_Student.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.G_Student.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.MiddleName, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.EditorFor(model => model.G_Student.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.G_Student.MiddleName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.LastName, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.EditorFor(model => model.G_Student.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.G_Student.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <br />

            <div class="row">
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.SchoolEmail, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.EditorFor(model => model.G_Student.SchoolEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.G_Student.SchoolEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.OtherEmail, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.EditorFor(model => model.G_Student.OtherEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.G_Student.OtherEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.Phone, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.EditorFor(model => model.G_Student.Phone, new { htmlAttributes = new { @class = "form-control phoneNum" } })
                            @Html.ValidationMessageFor(model => model.G_Student.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <br />

            <div class="row">
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.GendersId, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.DropDownListFor(m => m.G_Student.GendersId, (SelectList)ViewBag.GendersIdBag, "-- Select Gender --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.G_Student.GendersId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-8 col-xs-12">
                    <div class="form-group">

                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.PreviousDegrees, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="text-center">
                                @Html.ActionLink("Add Degree", "Create", "PrevDegree", new {id = Model.G_Student.Id }, null)
                            </div>
                        </div>

                        <div class="col-md-10 row">
                            @{if (!object.ReferenceEquals(Model.G_Student.PreviousDegrees.FirstOrDefault(), null))
                                {
                                    <table class="table">

                                        @foreach (var item in Model.G_Student.PreviousDegrees.OrderByDescending(s=>s.DateOfAward))
                                        {
                                            <tr>
                                                <td>&bull;</td>
                                                <td></td>
                                                <td><strong>@Html.DisplayFor(modelItem => item.DegreeTypes.Name)</strong>   @Html.DisplayFor(modelItem => item.Title)</td>
                                                <td>@Html.DisplayFor(modelItem => item.SchoolName)</td>
                                                <td>@Convert.ToString(string.Format("{0:yyyy}", item.DateOfAward))</td>
                                                <td>@Html.ActionLink("Edit", "Edit", "PrevDegree", new { id = item.Id }, new { @class = "btn btn-xs navbuttons", @style = "background-color: #060; color: #FFF" })</td>
                                            </tr>
                                        }
                                    </table>
                                }
                                else
                                {
                                    <p><em>No degrees listed.  Please add a degree.</em></p>
                                }
                            }

                        </div>
                    </div>
                </div>
            </div>

            <br />

            <div class="row">

                <div class="col-md-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.PersonRaces, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="row">

                            @{
                                var htmlListInfo = new HtmlListInfo(HtmlTag.table, 7, new { @class = "styled_list" }, TextLayout.Default, TemplateIsUsed.Yes);
                                @Html.CheckBoxListFor(model => model.RacesViewModel.PostedRaces.RaceIDs,
                                                              model => model.RacesViewModel.AvailableRaces,
                                                               race => race.Id,
                                                               race => race.Name,
                                                              model => model.RacesViewModel.SelectedRaces,
                                                              htmlListInfo, x => new { @class = "list_chkbx" })
                            }
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">

                <div class="col-md-4">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.RaceOther, htmlAttributes: new { @class = "control-label col-md-5 raceOther" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.EditorFor(model => model.G_Student.RaceOther, new { htmlAttributes = new { @class = "form-control raceOther" } })
                            @Html.ValidationMessageFor(model => model.G_Student.RaceOther, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <br />

            <div class="row">
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.ConcentrationsId, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.DropDownListFor(m => m.G_Student.ConcentrationsId, (SelectList)ViewBag.ConcentrationsIdBag, "-- Select Concentration --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.G_Student.ConcentrationsId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.TracksId, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.DropDownListFor(m => m.G_Student.TracksId, (SelectList)ViewBag.TracksIdBag, "-- Select Track --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.G_Student.TracksId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.PlansId, htmlAttributes: new { @class = "control-label col-md-5" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.DropDownListFor(m => m.G_Student.PlansId, (SelectList)ViewBag.PlansIdBag, "-- Select Plan --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.G_Student.PlansId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <br />

            <div class="row">
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.DegreeStartSemsId, htmlAttributes: new { @class = "control-label col-md-10" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.DropDownListFor(m => m.G_Student.DegreeStartSemsId, (SelectList)ViewBag.DegreeStartSemsIdBag, "-- Select Semester --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.G_Student.DegreeStartSemsId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="row">
                            @Html.LabelFor(model => model.G_Student.DegreeStartYear, htmlAttributes: new { @class = "control-label col-md-10" })
                        </div>
                        <div class="col-md-10 row">
                            @Html.EditorFor(model => model.G_Student.DegreeStartYear, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.G_Student.DegreeStartYear, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <br />

            <div class="row">
                <div class="col-md-4 col-xs-12">
                    <div class="form-group">
                        <div class="col-md-10 row">
                            <input type="submit" value="Save" class="btn btn-default createOrEditPost editPost" />
                        </div>
                    </div>
                </div>
            </div>

        </form>
    </div>
                                }
@*<br />
    <div>
        @Html.ActionLink("Back to List of Students", "Index", new { id = Model.G_Student.Id })
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@if (TempData["message"] != null)
{
    @TempData["message"]
}