@model StudentTrackingSystem3.Models.G_Graduation

@{
    ViewBag.Title = "Editing Graduation Requirements Record";
}

<h2>Graduation Requirements</h2>
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <h4>Editing graduation requirements record for <strong>@ViewBag.Student_FN @ViewBag.Student_LN</strong></h4>
        <br />

        <div class="row menuNav" id="menuNav_graduation">
            @Html.ActionLink("Background", "Edit", "Student", new { id = ViewBag.StudentID }, new { @class = "btn btn-primary infoNav menuNav_background col-md-2 col-xs-12" })

            @Html.ActionLink("Coursework", "Index", "Coursework", new { id = ViewBag.StudentID }, new { @class = "btn btn-primary infoNav menuNav_coursework col-md-2 col-xs-12" })

            @Html.ActionLink("Performance & Activity", "Index", "Performance", new { id = ViewBag.StudentID }, new { @class = "btn btn-primary infoNav menuNav_performance col-md-2 col-xs-12" })

            @Html.ActionLink("Graduation", "Index", "Graduation", new { id = ViewBag.StudentID }, new { @class = "btn btn-primary infoNav menuNav_graduation col-md-2 col-xs-12" })

            @Html.ActionLink("Post-Graduation", "Index", "PostGraduation", new { id = ViewBag.StudentID}, new { @class = "btn btn-primary infoNav menuNav_postgrad col-md-2 col-xs-12" })
        </div>

        <hr />
        <br />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.StudentID, htmlAttributes: new { @class = "control-label" })
            <br />
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentID, new { Value = ViewBag.StudentID, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">

            <div class="col-md-offset-1 col-md-4 col-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.DegreeEndSemsId, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.DropDownList("DegreeEndSemsId", null, "-- Select Semester --" , htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DegreeEndSemsId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-4 cold-xs-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.DegreeEndYear, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DegreeEndYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DegreeEndYear, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <h4 class="alert alert-success text-center">
            <strong>Qualifying Exam Passed (Form I)</strong>
        </h4>
        
        <div class="row">

            <div class="col-md-offset-1 col-md-4 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.QualifierResultId, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.DropDownList("QualifierResultId", null, "-- Select Result --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.QualifierResultId, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col-md-3 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.Qualifier2ResultId, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.DropDownList("Qualifier2ResultId", null, "-- Select Result --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Qualifier2ResultId, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col-md-4 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfQualification, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DateOfQualification, new { @Value = Model.DateOfQualification?.ToString("MM/dd/yyyy"), @class = "form-control datepicker" })
                        @Html.ValidationMessageFor(model => model.DateOfQualification, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

        </div>

        <h4 class="alert alert-success text-center">
            <strong>
                <span class="form2type">Comprehensive Exam / Proposal Presentation (Form II)</span>
                <span class="comprehensiveexam">Comprehensive Exam (Form II)</span>
                <span class="proposalpresentation">Proposal Presentation (Form II)</span>
            </strong>
        </h4>

        <div class="row">

            <div class="col-md-offset-1 col-md-3 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.Form2TypeId,  htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.DropDownList("Form2TypeId", null, "-- Select Form II Type --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Form2TypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

        </div>

        <div class="row">

            <div class="col-md-offset-1 col-md-6 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.Form2Title, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Form2Title, new { htmlAttributes = new { @class = "form-control", @style="max-width: 480px;" } })
                        @Html.ValidationMessageFor(model => model.Form2Title, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col-md-2 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.Form2Date, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Form2Date, new { @Value = Model.Form2Date?.ToString("MM/dd/yyyy"), @class = "form-control datepicker" })
                        @Html.ValidationMessageFor(model => model.Form2Date, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col-md-3 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.Form2ResultId, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.DropDownList("Form2ResultId", null, "-- Select Result --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Form2ResultId, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

        </div>

        <h4 class="alert alert-success text-center">
            <strong>
                <span class="committeetype">Thesis / Dissertation Committee Members</span>
                <span class="thesis">Thesis Committee Members</span>
                <span class="dissertation">Dissertation Committee Members</span>
            </strong>
        </h4>

        <div class="row">

            <div class="col-md-offset-1 col-md-4 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.CommitteeTypeID, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.DropDownList("CommitteeTypeID", null, "-- Select Committee Type --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CommitteeTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

        </div>

        <h4 class="col-md-offset-1"><strong>Advisor</strong></h4>

        <div class="row">

            <div class="col-md-offset-2 col-md-4 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.AdvisorName, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AdvisorName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdvisorName, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col-md-4 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.AdvisorEmail, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AdvisorEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdvisorEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>  

        </div>

        <div class="row">

            <div class="col-md-offset-2 col-md-4 col-xs-12">
                
                <div class="form-group">
                    @Html.LabelFor(model => model.AdvisorDepartment, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AdvisorDepartment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdvisorDepartment, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col-md-4 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.AdvisorUniversity, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AdvisorUniversity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AdvisorUniversity, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

        </div>

        <h4 class="col-md-offset-1"><strong>Committee Members</strong></h4>

        <div class="row">

            <div class="col-md-8 col-xs-12">
                <div class="form-group">

                    <div class="row">
                        <div class="col-md-offset-2">
                            @Html.ActionLink("Add Committee Member", "Create", "CommitteeMember", new { id = ViewBag.StudentID }, null)
                        </div>
                    </div>

                    <div class="col-md-offset-2 col-md-10 row">

                        @{IQueryable<G_CommitteeMember> studentCMs = ViewBag.StudentCMs;}

                        @{if (!object.ReferenceEquals(studentCMs.FirstOrDefault(), null))
                            {
                                <table class="table">

                                    @foreach (var item in studentCMs)
                                    {
                                        <tr>
                                            <td>&bull;</td>
                                            <td></td>
                                            <td><strong>@Html.DisplayFor(modelItem => item.Name)</strong></td>
                                            <td>@Html.DisplayFor(modelItem => item.Department)</td>
                                            <td>@Html.DisplayFor(modelItem => item.University)</td>
                                            <td>@Html.ActionLink("Edit", "Edit", "CommitteeMember", new { id = item.ID }, new { @class = "btn btn-xs navbuttons", @style = "background-color: #060; color: #FFF" })</td>
                                        </tr>
                                    }
                                </table>
                                        }
                                        else
                                        {
                                            <p><em>No committee members listed.  Please add a committee member.</em></p>
                                        }
                        }

                    </div>
                </div>
            </div>

        </div>

        <h4 class="alert alert-success text-center">
            <strong>
                <span class="committeetype">Thesis / Dissertation Presentation (Form III)</span>
                <span class="thesis">Thesis Presentation (Form III)</span>
                <span class="dissertation">Dissertation Presentation (Form III)</span>
            </strong>
        </h4>

        <div class="row">

            <div class="col-md-offset-1 col-md-6 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.Form3Title, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Form3Title, new { htmlAttributes = new { @class = "form-control", @style="max-width: 480px;" } })
                        @Html.ValidationMessageFor(model => model.Form3Title, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col-md-2 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.Form3Date, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Form3Date, new { @Value = Model.Form3Date?.ToString("MM/dd/yyyy"), @class = "form-control datepicker" })
                        @Html.ValidationMessageFor(model => model.Form3Date, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="col-md-3 col-xs-12">

                <div class="form-group">
                    @Html.LabelFor(model => model.Form3ResultId, htmlAttributes: new { @class = "control-label" })
                    <br />
                    <div class="col-md-10">
                        @Html.DropDownList("Form3ResultId", null, "-- Select Result --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Form3Result, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

        </div>

        <br />

        <div class="row">

            <div class="form-group">
                <div class="col-md-offset-1 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default createOrEditPost2" />
                </div>
            </div>

        </div>    
        
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}