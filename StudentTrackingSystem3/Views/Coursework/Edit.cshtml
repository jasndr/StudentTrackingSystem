@model StudentTrackingSystem3.Models.G_Coursework

@{
    ViewBag.Title = "Edit Course";
}

<h2>Graduate Student Coursework</h2>
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Editing <strong>@Html.DisplayFor(model=>model.Semesters.Name) @Html.DisplayFor(model=>model.Year) &mdash; @Html.DisplayFor(model=>model.Course.CourseNum)</strong> course for <strong>@Html.DisplayFor(model=>model.Student.FirstName) @Html.DisplayFor(model=>model.Student.LastName)</strong> </h4>
        <br />

        <div class="row menuNav" id="menuNav_coursework">
            @Html.ActionLink("Background", "Edit", "Student", new { id = Model.Student.Id }, new { @class = "btn btn-primary infoNav menuNav_background col-md-2 col-xs-12" })

            @Html.ActionLink("Coursework", "Index", "Coursework", new { id = Model.Student.Id }, new { @class = "btn btn-primary infoNav menuNav_coursework col-md-2 col-xs-12" })

            @Html.ActionLink("Performance & Activity", "Index", "Performance", new { id = Model.Student.Id }, new { @class = "btn btn-primary infoNav menuNav_performance col-md-2 col-xs-12" })

            @Html.ActionLink("Requirements", "Index", "Graduation", new { id = Model.Student.Id }, new { @class = "btn btn-primary infoNav menuNav_graduation col-md-2 col-xs-12" })

            @Html.ActionLink("Post-Graduation", "Index", "PostGraduation", new { id = Model.Student.Id }, new { @class = "btn btn-primary infoNav menuNav_postgrad col-md-2 col-xs-12" })
        </div>

        <hr />
        <br />


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.Student, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentID, new {Value=ViewBag.StudentID,  htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SemestersID, "Semester", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SemestersID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SemestersID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseID, "Course", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GradeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model=>model.Comments, htmlAttributes: new { @class="form-control"})
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default createOrEditPost2" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = Model.StudentID})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
